<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>HTML + CSS学习笔记</title>
      <link href="/2022/06/16/html-css-xue-xi-bi-ji/"/>
      <url>/2022/06/16/html-css-xue-xi-bi-ji/</url>
      
        <content type="html"><![CDATA[<h1 id="HTML基础"><a href="#HTML基础" class="headerlink" title="HTML基础"></a>HTML基础</h1><h2 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h2><h3 id="单标签"><a href="#单标签" class="headerlink" title="单标签"></a>单标签</h3><p> img,hr,br</p><h3 id="双标签"><a href="#双标签" class="headerlink" title="双标签"></a>双标签</h3><p> a,p …</p><ul><li>h1-h6：标题标签</li><li>br：换行标签</li><li>p ：段落标签</li><li>div ：没语义</li><li>span ：行内标签</li><li>img ：图片标签</li><li>a ：超链接<ul><li>target&#x3D;”_blank”</li></ul></li><li>base ：<ul><li><code>&lt;base target=&quot;_blank&quot;&gt;：所有a都是以_blank打开</code></li></ul></li><li>pre:预格式化文本</li></ul><h2 id="路径"><a href="#路径" class="headerlink" title="路径"></a>路径</h2><ul><li>相对路径</li><li>绝对路径<h2 id="锚点"><a href="#锚点" class="headerlink" title="锚点"></a>锚点</h2><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">//  点击a标签跳转到p标签位置</span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"#content"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token operator">&lt;</span>p id<span class="token operator">=</span><span class="token string">"content"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span></code></pre><h2 id="特殊字符"><a href="#特殊字符" class="headerlink" title="特殊字符"></a>特殊字符</h2></li><li>&amp;nbsp;空格(&amp;nbsp ;)</li><li>&lt;小于(&amp; lt;)</li><li>&gt;大于(&amp; gt;)</li></ul><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><p> <strong>展示数据</strong></p><pre class=" language-html"><code class="language-html">    <span class="token comment" spellcheck="true">&lt;!-- 表格 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- 行 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>            <span class="token comment" spellcheck="true">&lt;!-- 表头单元格 居中加粗 --></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>name<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>sex<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>age<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>            <span class="token comment" spellcheck="true">&lt;!-- 列 --></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>zhangsan<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>male<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>18<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span></code></pre><h3 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h3><pre class=" language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!--    border:表格边框   width/height:表格宽高   align：表格的对齐方式   cellspacing:单元格的间距   cellpadding:单元格内的padding --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>300<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span>    <span class="token attr-name">cellspacing</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">cellpadding</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>30<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span></code></pre><h3 id="表格标题"><a href="#表格标题" class="headerlink" title="表格标题"></a>表格标题</h3><pre class=" language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!-- 写在table标签里面 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>caption</span><span class="token punctuation">></span></span>表格标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>caption</span><span class="token punctuation">></span></span></code></pre><h3 id="合并单元格"><a href="#合并单元格" class="headerlink" title="合并单元格"></a>合并单元格</h3><ul><li>跨行合并:rowspan</li><li>跨列合并:colspan<h3 id="表格结构化分"><a href="#表格结构化分" class="headerlink" title="表格结构化分"></a>表格结构化分</h3></li><li>thead <strong>tead必须要有tr标签</strong></li><li>tbody</li><li>tfoot</li></ul><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><p> <strong>页面布局</strong></p><ul><li>无序列表：ul&gt;li</li><li>有序列表: ol&gt;li</li><li>自定义列表 :dl&gt;dt+dd (名词解释)<br> &#96;&#96;&#96;html<ul>     <li>无序列表</li> </ul>  <ol>     <li>有序列表</li> </ol> <dl>     <dt>自定义列表</dt>     <dd>北京</dd>     <dd>上海</dd>     <dd>重庆</dd> </dl></li></ul><pre><code>## 表单**收集用户信息**### 组成* 表单* 提示文本* 表单域### 表单标签* input```html &lt;form action=&quot;#&quot;&gt;       &lt;!--            type:               text:文本               password:密码               radio:单选按钮               checkbox:复选框 check=&quot;checked&quot;选中状态               button:普通按钮               submit:提交按钮               reset：重置按钮               image图像形式的提交按钮：里面必须有src属性               file：文件域        --&gt;       &lt;label for=&quot;&quot;&gt;用户名：&lt;/label&gt; &lt;input type=&quot;text&quot;&gt;&lt;br&gt;       &lt;label for=&quot;&quot;&gt;密码：&lt;/label&gt; &lt;input type=&quot;password&quot;&gt;&lt;br&gt;       &lt;label for=&quot;&quot;&gt;性别：&lt;/label&gt;        &lt;label for=&quot;&quot;&gt;男&lt;/label&gt;&lt;input type=&quot;radio&quot; name=&quot;sex&quot;&gt;       &lt;label for=&quot;&quot;&gt;女&lt;/label&gt;&lt;input checked type=&quot;radio&quot; name=&quot;sex&quot;&gt;&lt;br&gt;       &lt;label for=&quot;&quot;&gt;爱好：&lt;/label&gt;        &lt;label for=&quot;&quot;&gt;睡觉&lt;/label&gt;&lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot;&gt;       &lt;label for=&quot;&quot;&gt;打游戏&lt;/label&gt;&lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot;&gt;&lt;br&gt;       &lt;button&gt;获取验证码&lt;/button&gt; &lt;br&gt;       &lt;input type=&quot;button&quot; value=&quot;获取验证码&quot;&gt;&lt;br&gt;       &lt;input type=&quot;reset&quot; value=&quot;重置内容&quot;&gt;&lt;br&gt;       &lt;input type=&quot;submit&quot; value=&quot;提交内容&quot;&gt;&lt;br&gt;       &lt;input type=&quot;image&quot; src=&quot;&quot; value=&quot;图片形式提交内容&quot;&gt;&lt;br&gt;       &lt;input type=&quot;file&quot; value=&quot;上传文件&quot;&gt;&lt;br&gt;        &lt;!--             name:控件的名称，在提交表单时必须要有它才能成功            value:表单里面默认显示的文本         --&gt;       &lt;label for=&quot;&quot;&gt;username:&lt;/label&gt; &lt;input name=&quot;username&quot; value=&quot;&quot; type=&quot;text&quot;&gt;&lt;br&gt;       &lt;label for=&quot;&quot;&gt;password:&lt;/label&gt; &lt;input name=&quot;password&quot; value=&quot;&quot; type=&quot;password&quot;&gt;&lt;br&gt;          &lt;/form&gt;</code></pre><ul><li>label标签<br><strong>用于绑定一个表单元素，当点击label标签时，被绑定的过犹不及自动获得焦点</strong><pre class=" language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!--             1.label直接包含表单元素            2.用for 和 id 来控制         --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token punctuation">></span></span>test            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>username:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>password:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span></code></pre></li><li>textarea文本域<br><strong>创建多行文本输入框</strong></li><li>selected下拉框<pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>请选择<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>北京<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">selected</span><span class="token punctuation">></span></span>上海<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span></code></pre><h3 id="表单域"><a href="#表单域" class="headerlink" title="表单域"></a>表单域</h3><code>&lt;form action=&quot;http://localhost:8000&quot; method=&quot;post&quot; &gt;</code><br><strong>属性我们在html中用双引号</strong></li></ul><h1 id="CSS层叠样式表"><a href="#CSS层叠样式表" class="headerlink" title="CSS层叠样式表"></a>CSS层叠样式表</h1><p>HTML不能美化页面，所以有了css<br>作用：<strong>版面布局和外观显示样式</strong></p><h2 id="样式种类"><a href="#样式种类" class="headerlink" title="样式种类"></a>样式种类</h2><h3 id="行内（内联）样式"><a href="#行内（内联）样式" class="headerlink" title="行内（内联）样式"></a>行内（内联）样式</h3><p>当前元素</p><h3 id="内部样式"><a href="#内部样式" class="headerlink" title="内部样式"></a>内部样式</h3><p><code>&lt;tr style=&quot;background:pink;&quot;&gt;</code><br>当前页面</p><pre class=" language-html"><code class="language-html">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">        img &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">20</span>px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">20</span>px<span class="token punctuation">;</span>        &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>        tr &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">40</span>px<span class="token punctuation">;</span>        &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span></code></pre><h3 id="外部样式"><a href="#外部样式" class="headerlink" title="外部样式"></a>外部样式</h3><p>多个页面，可复用<br>新建一个css文件，当前页面通过link来引入</p><h2 id="css选择器"><a href="#css选择器" class="headerlink" title="css选择器"></a>css选择器</h2><p><strong>把我们想要的标签选择出来</strong></p><h3 id="基础选择器"><a href="#基础选择器" class="headerlink" title="基础选择器"></a>基础选择器</h3><ul><li>标签选择器（相同的标签）</li><li>id选择器（只选择1个特定的标签）</li><li>类选择器（一个或多个）</li><li>通配符选择器（*所有标签）<h3 id="复合选择器"><a href="#复合选择器" class="headerlink" title="复合选择器"></a>复合选择器</h3></li></ul><h4 id="复合选择器-1"><a href="#复合选择器-1" class="headerlink" title="复合选择器"></a>复合选择器</h4><pre class=" language-css"><code class="language-css"> <span class="token comment" spellcheck="true">/* 复合选择器 : 交集/并集选择 */</span>    <span class="token comment" spellcheck="true">/* p标签中类名为two的 */</span>    p<span class="token number">.</span>two&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>        <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>    &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/* span 标签和 p标签类名为two的 */</span>    span,p<span class="token number">.</span>two&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span><span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">50</span>px<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><h4 id="关系选择器"><a href="#关系选择器" class="headerlink" title="关系选择器"></a>关系选择器</h4><pre class=" language-css"><code class="language-css"><span class="token comment" spellcheck="true">/* 关系选择器  */</span>div>p<span class="token number">.</span>one,span<span class="token number">.</span>th&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> salmon<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>div~div&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span> <span class="token property">background-color</span><span class="token punctuation">:</span> slategray<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>div p,span<span class="token number">.</span>th&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> green<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>   </code></pre><h4 id="属性选择器"><a href="#属性选择器" class="headerlink" title="属性选择器"></a>属性选择器</h4><pre class=" language-css"><code class="language-css"><span class="token comment" spellcheck="true">/* 属性选择器 */</span>p[title]&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> hotpink<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>p[title^=abc]&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> indigo<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>p[title$=e]&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span><span class="token number">178</span>, <span class="token number">73</span>, <span class="token number">226</span><span class="token punctuation">)</span><span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>p[title*=sa]&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">40</span>px<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><h4 id="伪类选择器"><a href="#伪类选择器" class="headerlink" title="伪类选择器"></a>伪类选择器</h4><pre class=" language-css"><code class="language-css">ul><span class="token property">li</span><span class="token punctuation">:</span>first-child&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span><span class="token property">color</span><span class="token punctuation">:</span> brown<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">/* 选择li的同类中最后个 */</span>ul><span class="token property">li</span><span class="token punctuation">:</span>last-of-type&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span><span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">30</span>px<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">/* 选择奇数的孩子 */</span>ul><span class="token property">li</span><span class="token punctuation">:</span><span class="token function">nth-child</span><span class="token punctuation">(</span><span class="token number">2</span>n+<span class="token number">1</span><span class="token punctuation">)</span>&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> cornflowerblue<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">/* 除开 li中第二个孩子 */</span>ul><span class="token property">li</span><span class="token punctuation">:</span><span class="token function">not</span><span class="token punctuation">(</span><span class="token punctuation">:</span><span class="token function">nth-child</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">50</span>px<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">/* p标签的第一个字 */</span><span class="token property">p</span><span class="token punctuation">:</span><span class="token punctuation">:</span>first-letter&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">30</span>px<span class="token punctuation">;</span><span class="token property">color</span><span class="token punctuation">:</span> black<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">/* p标签的第一行 */</span><span class="token property">p</span><span class="token punctuation">:</span><span class="token punctuation">:</span>first-line&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> tomato<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">/* p标签的最后 */</span><span class="token property">p</span><span class="token punctuation">:</span><span class="token punctuation">:</span>after&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">'abc'</span><span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><h4 id="链接选择器"><a href="#链接选择器" class="headerlink" title="链接选择器"></a>链接选择器</h4><pre class=" language-css"><code class="language-css"><span class="token property">a</span><span class="token punctuation">:</span>link &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span><span class="token property">a</span><span class="token punctuation">:</span>visited &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> brown<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span><span class="token property">a</span><span class="token punctuation">:</span>hover &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> tomato<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span><span class="token property">a</span><span class="token punctuation">:</span>active &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><h2 id="元素的分类"><a href="#元素的分类" class="headerlink" title="元素的分类"></a>元素的分类</h2><p>:one:块级元素 :two:行内元素 :three:行内块元素</p><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><pre class=" language-css"><code class="language-css"><span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token url">url(../image//咸鸭蛋英语故事.png)</span><span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span><span class="token property">background-repeat</span><span class="token punctuation">:</span> no-repeat<span class="token punctuation">;</span><span class="token property">background-attachment</span><span class="token punctuation">:</span> scroll<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/* 可以写 left center right top center bottom 也可以写（x,y） 坐标 ： 50px center 可以混合*/</span><span class="token property">background-position</span><span class="token punctuation">:</span> top center<span class="token punctuation">;</span><span class="token property">background</span><span class="token punctuation">:</span> pink <span class="token url">url(../image/咸鸭蛋英语故事.png)</span> no-repeat  center center<span class="token punctuation">;</span></code></pre><h2 id="css三大特性"><a href="#css三大特性" class="headerlink" title="css三大特性"></a>css三大特性</h2><p>:one:继承性::two:优先级 :three:权重叠加</p><p><strong>样式的继承</strong>：font- line- text-开头和 color 可以继承</p><img src="./typora-img/Snipaste_2022-05-02_14-50-50.png" alt=""><h2 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h2><ul><li><p>font-size:字体大小</p></li><li><p>font-family:字体类型（多个字体用逗号分隔）</p><ul><li>unicode字体</li></ul></li><li><p>font-weight:字体加粗<br>* bold(700)<br>* normal(400)</p></li><li><p>font-style:</p><ul><li>normal</li><li>italic斜体</li></ul></li><li><p>综合性写法<br>font: font-style font-weight font-size&#x2F;line-height font-family的顺序来显示<br><strong>font: italic 700 20px “Mircosoft YaHei”;</strong></p><h2 id="外观属性"><a href="#外观属性" class="headerlink" title="外观属性"></a>外观属性</h2></li><li><p>color:文本颜色</p></li><li><p>line-height:行高</p></li><li><p>texg-align:<strong>文本</strong>水平对齐方式</p></li><li><p>text-indent:首行文本缩进<br>em是倍数关系，1em是1个字的宽度。</p></li><li><p>text-decoration：文本装饰（none&#x2F;underline）</p><pre class=" language-html"><code class="language-html"> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">      div &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>          <span class="token property">font</span><span class="token punctuation">:</span> normal bold <span class="token number">20</span>px <span class="token string">'宋体'</span><span class="token punctuation">;</span>      &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>      <span class="token number">.</span>java &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>          <span class="token property">background-color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span>      &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>      <span class="token number">.</span>python &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>          <span class="token property">font-style</span><span class="token punctuation">:</span> italic<span class="token punctuation">;</span>      &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>      #link &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>          <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>      &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>      p &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>          <span class="token property">text-indent</span><span class="token punctuation">:</span> <span class="token number">2</span>em<span class="token punctuation">;</span>      &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>java<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>hello,java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>c++<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>hello,c++<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>python<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>hello,python<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>link<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>click me<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>n an age where our technology gets smarter and smarter by the month, we often overlook the integral machinery that makes our computers so intuitive.Each and every time you press your PC’s power button, the BIOS is the first operation to load your operating system and all of the personal settings that make your computer your own.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Each and every time you press your PC’s power button, the BIOS is the first operation to load your operating system and all of the personal settings that make your computer your own.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></code></pre><h2 id="盒子模型（重点）"><a href="#盒子模型（重点）" class="headerlink" title="盒子模型（重点）"></a>盒子模型（重点）</h2></li><li><p>组成：content ,padding ,border ,margin</p><ul><li>border:border-width border-style border-color;<br> <code> border:1px solid tomato;</code><pre class=" language-css"><code class="language-css">table &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>       <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">500</span>px<span class="token punctuation">;</span>       <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span> auto<span class="token punctuation">;</span>   &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>   table,   th,   td&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>       <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">1</span>px solid red<span class="token punctuation">;</span>       <span class="token property">border-collapse</span><span class="token punctuation">:</span> collapse<span class="token punctuation">;</span>   &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><strong>border-top&#x2F;left&#x2F;right&#x2F;bottom</strong></li><li>padding<pre class=" language-css"><code class="language-css">   div &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>       <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>       <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>       <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">1</span>px solid tomato<span class="token punctuation">;</span>       <span class="token comment" spellcheck="true">/* 上下左右10px */</span>       <span class="token comment" spellcheck="true">/* padding: 10px; */</span>       <span class="token comment" spellcheck="true">/* 上下5px 左右10px */</span>       <span class="token comment" spellcheck="true">/* padding: 5px 10px; */</span>       <span class="token comment" spellcheck="true">/* 上5px 左右8px 下10px */</span>       <span class="token comment" spellcheck="true">/* padding: 5px 8px 10px; */</span>       <span class="token comment" spellcheck="true">/* padding-left: 5px;       padding-left: 8px;       padding-bottom: 10px; */</span>       <span class="token comment" spellcheck="true">/* 上右下左 */</span>       <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">5</span>px <span class="token number">6</span>px <span class="token number">7</span>px <span class="token number">8</span>px<span class="token punctuation">;</span>   &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><strong>当设置padding会撑开盒子</strong>，解决：</li></ul></li><li><p>1.宽度 - padding 在给盒子大小</p></li><li><p>2.box-sizing: border-box;<br><strong>如果没有给一个盒子指定宽度，则不会撑开盒子</strong></p><ul><li><p>margin外边距，盒子之间的距离</p><pre class=" language-css"><code class="language-css"> <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/* 盒子水平居中对齐 */</span> <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">50</span>px auto<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">/* 文本（行内/行内块）水平居中 */</span> <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span></code></pre><p><strong>块级盒子居中对齐</strong>：<br>盒子必须指定宽度，左右边距设置为auto: margin: 0 auto;<br><strong>text-align:center;文本（行内&#x2F;行内块）水平居中对齐</strong></p></li><li><p>插入图片与背景图片的区别</p><pre class=" language-css"><code class="language-css"><span class="token number">.</span>insert_img &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>       <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span>       <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span>       <span class="token comment" spellcheck="true">/* 插入图片可以用padding来改变位置 */</span>       <span class="token property">padding-left</span><span class="token punctuation">:</span> <span class="token number">30</span>px<span class="token punctuation">;</span>   &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>   <span class="token number">.</span>insert_img img &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>       <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">80%</span><span class="token punctuation">;</span>   &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>   <span class="token number">.</span>bg_img &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>       <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">400</span>px<span class="token punctuation">;</span>       <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span>       <span class="token property">background</span><span class="token punctuation">:</span> <span class="token url">url('./images/宫村.png')</span><span class="token punctuation">;</span>       <span class="token comment" spellcheck="true">/* 背景图片的显示情况  */</span>       <span class="token property">background-size</span><span class="token punctuation">:</span> contain<span class="token punctuation">;</span>       <span class="token comment" spellcheck="true">/* 背景图片padding不可以改变位置       用background_position可以改变位置 */</span>       <span class="token comment" spellcheck="true">/* padding: 50px; */</span>       <span class="token property">background-position</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>       <span class="token comment" spellcheck="true">/* 背景图片重复不 */</span>       <span class="token property">background-repeat</span><span class="token punctuation">:</span> no-repeat<span class="token punctuation">;</span>   &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre></li><li><p>外边距合并问题（两个相邻的块元素有外边距时）</p><ul><li><p>垂直外边距合并：<strong>取两个值中较大值</strong>–解决方法：只给一个盒子设置margin</p></li><li><p>嵌套关系的外边距合并（塌陷）：</p><p> 解决方案:one:父元素设置一个透明的上边框 。:two:父元素设置个上padding</p><p>:three:父元素添加：overflow:hidden;</p></li></ul></li></ul></li></ul><img src="./typora-img/image-20220501131312479.png" alt=""><ul><li><p>案例：</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>IE<span class="token punctuation">=</span>edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>news<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">        * &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">/* 去除默认的内外边距 */</span>            <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>            <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token punctuation">;</span>        &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>        li &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">/* 去除li的小圆点 */</span>            <span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>        &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>        a &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">/* 去除下划线 */</span>            <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>        &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>        <span class="token number">.</span>news &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">350</span>px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">230</span>px<span class="token punctuation">;</span>            <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">14</span>px<span class="token punctuation">;</span>            <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">1</span>px solid <span class="token hexcode">#ccc</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">/* 盒子水平居中 */</span>            <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span> auto<span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">/* 盒子内边距 */</span>            <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">/* 设置盒子大小包含边框 不会撑开盒子大小*/</span>            <span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span>        &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>        <span class="token number">.</span>news h<span class="token number">1</span> &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>            <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">18</span>px<span class="token punctuation">;</span>            <span class="token property">border-bottom</span><span class="token punctuation">:</span> <span class="token number">2</span>px solid <span class="token hexcode">#ccc</span><span class="token punctuation">;</span>            <span class="token property">margin-bottom</span><span class="token punctuation">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span>        &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>        <span class="token number">.</span>news li &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">30</span>px<span class="token punctuation">;</span>            <span class="token property">line-height</span><span class="token punctuation">:</span> <span class="token number">30</span>px<span class="token punctuation">;</span>            <span class="token property">background</span><span class="token punctuation">:</span> <span class="token url">url(./cc-arrow-right-square.png)</span> no-repeat <span class="token number">0</span> <span class="token number">7</span>px<span class="token punctuation">;</span>            <span class="token property">background-size</span><span class="token punctuation">:</span> <span class="token number">5%</span><span class="token punctuation">;</span>            <span class="token property">padding-left</span><span class="token punctuation">:</span> <span class="token number">20</span>px<span class="token punctuation">;</span>            <span class="token property">border-bottom</span><span class="token punctuation">:</span> <span class="token number">1</span>px dashed <span class="token hexcode">#ccc</span><span class="token punctuation">;</span>        &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>           <span class="token number">.</span>news a &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>            <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#666</span><span class="token punctuation">;</span>        &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>news<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>最新文章/New Articles<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>北京网页设计，平面设计<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>javascript 1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>javascript 2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>javascript 3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>北京网页设计，平面设计<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre></li><li><p>总结</p><img src="./typora-img/image-20220501135034342.png"><ul><li><p>拓展：:one:圆角边框–border-radius:50%(xxpx);:two:盒子阴影——box-shadow:水平阴影 垂直阴影  模糊半径 影子大小  颜色  内（inset）&#x2F;阴影；</p></li><li><p><strong>css 书写规范</strong></p><ul><li>空格规范</li><li>选择器规范（另起一行），嵌套层不大于3层</li><li>属性定义分号结束</li></ul></li></ul></li></ul><h2 id="浮动-float"><a href="#浮动-float" class="headerlink" title="浮动(float)"></a>浮动(float)</h2><h3 id="布局的三种机制："><a href="#布局的三种机制：" class="headerlink" title="布局的三种机制："></a>布局的三种机制：</h3><h4 id="1-普通流："><a href="#1-普通流：" class="headerlink" title="1.普通流："></a>1.普通流：</h4><h4 id="one-块级元素-two-行内元素"><a href="#one-块级元素-two-行内元素" class="headerlink" title=":one:块级元素:two:行内元素"></a>:one:块级元素:two:行内元素</h4><h4 id="2-浮动"><a href="#2-浮动" class="headerlink" title="2.浮动"></a>2.浮动</h4><p><strong>标准流不能满足我们的布局要求</strong></p><p>设置浮动的元素：:one:脱离标准流:two:元素移动到指定位置 :three:浮动的元素是没有边距行内块，（普通的inline-block是有一定的默认边距）:four:如果一行显示不下，会默认换行显示</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>IE<span class="token punctuation">=</span>edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>float<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">        * &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>            <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token punctuation">;</span>            <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>        &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>        li &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>            <span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>        &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>        <span class="token number">.</span>box &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">1000</span>px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">500</span>px<span class="token punctuation">;</span>            <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span> auto<span class="token punctuation">;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span>        &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>        <span class="token number">.</span>left &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>            <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> purple<span class="token punctuation">;</span>        &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>        <span class="token number">.</span>right &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>            <span class="token property">float</span><span class="token punctuation">:</span> right<span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">800</span>px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> tomato<span class="token punctuation">;</span>        &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>        <span class="token number">.</span>right li &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>            <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">190</span>px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">240</span>px<span class="token punctuation">;</span>            <span class="token property">margin-left</span><span class="token punctuation">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span>            <span class="token property">margin-bottom</span><span class="token punctuation">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> skyblue<span class="token punctuation">;</span>        &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>left<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>7<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><img src="./typora-img/Snipaste_2022-05-01_15-46-49.png" alt=""><p><strong>拓展</strong>：:one:子盒子的浮动参照父盒子对齐，:two:不会超过父盒子的内边距，也不会和父盒子边框重叠</p><h5 id="清除浮动"><a href="#清除浮动" class="headerlink" title="清除浮动"></a>清除浮动</h5><p><strong>影响浮动的原因</strong>：很多时候父元素不方便给高度，是内容来撑开，但是子元素浮动会脱离文档流，父盒子高度就为0，影响下面的标准流盒子</p><p><strong>清除浮动的本质</strong>：解决父元素因子元素浮动引起高度塌陷为0 的问题，</p><p><strong>清除浮动方法</strong>：:one: clear:left&#x2F;right&#x2F;both; （用结构来支持样式不支持做法）:two:父级添加overflow:hidden; （内容溢出会隐藏）:three:</p><pre class=" language-css"><code class="language-css"><span class="token number">.</span><span class="token property">clearfix</span><span class="token punctuation">:</span>after,<span class="token number">.</span><span class="token property">clearfix</span><span class="token punctuation">:</span>before &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">;</span>    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/* display: table;*/</span>    <span class="token property">clear</span><span class="token punctuation">:</span> both<span class="token punctuation">;</span>    <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span><span class="token number">.</span>clearfix &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    *<span class="token property">zoom</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">/* 支持ie6/7*/</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><img src="./typora-img/Snipaste_2022-05-01_16-34-59.png" alt=""><h4 id="ps切图："><a href="#ps切图：" class="headerlink" title="ps切图："></a>ps切图：</h4><p>:one:切片工具划区域—&gt;文件菜单—导出—导出为web—存储—选择<strong>选中的切片</strong> :two:图层菜单–新建基于图层的切片 —导出—导出为web—存储—选择<strong>选中的切片</strong> :three:cutterman插件</p><h4 id="3-定位-position"><a href="#3-定位-position" class="headerlink" title="3.定位(position)"></a>3.定位(position)</h4><p>css属性书写顺序：:one:布局定位 :two:自身属性 :three:文本属性 :four:其他属性<br><img src="./typora-img/Snipaste_2022-05-01_18-56-57.png" alt=""></p><p><strong>小技巧</strong>：子盒子可以比父盒子大，然后overflow:hidden;来实现装下元素不换行效果。</p><h2 id="定位-position"><a href="#定位-position" class="headerlink" title="定位(position)"></a>定位(position)</h2><p>定位 &#x3D; 定位模式 + 边偏移（left &#x2F;right &#x2F;top &#x2F;bottom）</p><p><strong>子绝父相</strong></p><h3 id="定位模式"><a href="#定位模式" class="headerlink" title="定位模式"></a>定位模式</h3><h4 id="静态定位-static"><a href="#静态定位-static" class="headerlink" title="静态定位(static)"></a>静态定位(static)</h4><p><strong>没有定位</strong></p><h4 id="相对定位-relative"><a href="#相对定位-relative" class="headerlink" title="相对定位(relative)"></a>相对定位(relative)</h4><p><strong>不会脱离标准流（文档流），原来 的位置还占有</strong></p><h4 id="绝对定位-absolute"><a href="#绝对定位-absolute" class="headerlink" title="绝对定位(absolute)"></a>绝对定位(absolute)</h4><p><strong>不保留原来的位置,以离它最近的定位（除static）的包含块（元素）为基准，来移动</strong></p><h4 id="固定定位-fixed"><a href="#固定定位-fixed" class="headerlink" title="固定定位(fixed)"></a>固定定位(fixed)</h4><p><strong>脱离文档流，不占位置，而且跟父元素无任何关系，只认浏览器的可视窗口</strong></p><h3 id="居中对齐"><a href="#居中对齐" class="headerlink" title="居中对齐"></a>居中对齐</h3><ul><li>水平：:one:left:50%;margin-left:负自己宽度的一半</li></ul><h4 id="叠放顺序（z-index"><a href="#叠放顺序（z-index" class="headerlink" title="叠放顺序（z-index)"></a>叠放顺序（z-index)</h4><p>属性值越大，盒子越靠上。</p><p><strong>定位改变display属性：inline-block</strong></p><p><strong>浮动元素，绝对&#x2F;固定定位不会触发外边距合并问题</strong></p><p><strong>电梯导航</strong>：:one:left:50%; :two:margin-left:负（屏幕宽度一半 + 版心宽度一半 ）</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><img src="./typora-img/Snipaste_2022-05-03_12-10-22.png" alt=""><img src="./typora-img/image-20220503122136380.png" alt=""><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>IE<span class="token punctuation">=</span>edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">        * &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>            <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>            <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>        &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>        li &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>            <span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>        &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>        <span class="token number">.</span>box &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>            <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>            <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">400</span>px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">300</span>px<span class="token punctuation">;</span>            <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">100</span>px auto<span class="token punctuation">;</span>        &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>        <span class="token number">.</span>box img &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>        &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>        <span class="token number">.</span>arrow-l,        <span class="token number">.</span>arrow-r &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>            <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>            <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span>            <span class="token property">margin-top</span><span class="token punctuation">:</span> -<span class="token number">12</span>px<span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">25</span>px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">25</span>px<span class="token punctuation">;</span>            <span class="token property">line-height</span><span class="token punctuation">:</span> <span class="token number">25</span>px<span class="token punctuation">;</span>            <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>            <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#fff</span><span class="token punctuation">;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span>,<span class="token number">0</span>,<span class="token number">0</span>,<span class="token number">.3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">10</span>px <span class="token number">10</span>px <span class="token number">0</span><span class="token punctuation">;</span>        &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>        <span class="token number">.</span>arrow-r &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>            <span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>            <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">10</span>px <span class="token number">0</span> <span class="token number">0</span> <span class="token number">10</span>px<span class="token punctuation">;</span>        &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>        <span class="token number">.</span>circle &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>            <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>            <span class="token property">bottom</span><span class="token punctuation">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span>            <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span>            <span class="token property">margin-left</span><span class="token punctuation">:</span> -<span class="token number">30</span>px<span class="token punctuation">;</span>        &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>        <span class="token number">.</span>circle li&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>            <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span>            <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token hexcode">#fff</span><span class="token punctuation">;</span>            <span class="token property">margin-left</span><span class="token punctuation">:</span> <span class="token number">5</span>px<span class="token punctuation">;</span>        &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>        <span class="token number">.</span>circle <span class="token number">.</span>current &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span><span class="token number">169</span>, <span class="token number">14</span>, <span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./images/1.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>arrow-l<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token entity" title="&lt;">&amp;lt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>arrow-r<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token entity" title="&gt;">&amp;gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>circle<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>current<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h2 id="css高级技巧"><a href="#css高级技巧" class="headerlink" title="css高级技巧"></a>css高级技巧</h2><h3 id="元素显示与隐藏"><a href="#元素显示与隐藏" class="headerlink" title="元素显示与隐藏"></a>元素显示与隐藏</h3><p>:one:display: none&#x2F;block; (没留位置) （js中特效，鼠标经过，下拉框..）</p><p>:two: visibility: hidden&#x2F;visible;（保留位置）</p><p>:three: overflow: visiible&#x2F;hidden&#x2F;scroll&#x2F;auto; (清除浮动 ，内容不超出)</p><h3 id="css用户界面样式"><a href="#css用户界面样式" class="headerlink" title="css用户界面样式"></a>css用户界面样式</h3><h4 id="鼠标样式："><a href="#鼠标样式：" class="headerlink" title="鼠标样式："></a>鼠标样式：</h4><img src="./typora-img/image-20220503135023690.png"><h4 id="轮廓线"><a href="#轮廓线" class="headerlink" title="轮廓线:"></a>轮廓线:</h4><p>outline: none | 0;</p><h4 id="防止拖曳文本域"><a href="#防止拖曳文本域" class="headerlink" title="防止拖曳文本域"></a>防止拖曳文本域</h4><p>resize:none;</p><h3 id="vertical-align垂直对齐"><a href="#vertical-align垂直对齐" class="headerlink" title="vertical-align垂直对齐"></a>vertical-align垂直对齐</h3><p><strong>只对行内元素、行内块有效</strong></p><p>vertical-align : baseline | top | middle | bottom</p><p>去除图片底部缝隙：:one: vertical-align设置baseline外的值。:two: 设置块元素。</p><h3 id="溢出的文字省略号显示"><a href="#溢出的文字省略号显示" class="headerlink" title="溢出的文字省略号显示"></a>溢出的文字省略号显示</h3><pre class=" language-css"><code class="language-css"><span class="token comment" spellcheck="true">/* 1.不允许换行 */</span><span class="token property">white-space</span><span class="token punctuation">:</span> nowrap<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/* 2.超出的隐藏 */</span><span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/* 3.省略号代替超出的部分 */</span><span class="token property">text-overflow</span><span class="token punctuation">:</span> ellipsis<span class="token punctuation">;</span></code></pre><h3 id="css精灵技术（重要）"><a href="#css精灵技术（重要）" class="headerlink" title="css精灵技术（重要）"></a>css精灵技术（重要）</h3><p><strong>减少服务器接受和发送请求的次数，提高页面加载速度</strong></p><p>制作精灵图：1.确定图片的大小和位置，2.给盒子指定前景图片时，定位基本都是负值。</p><h3 id="滑动门"><a href="#滑动门" class="headerlink" title="滑动门"></a>滑动门</h3><img src="./typora-img/image-20220503154017120.png"><h3 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h3><p>:one:margin负值之美</p><p>水平垂直居中，2）压住盒子相邻边框：margin-left: -1px;margin-top:-1px;(负的是border边框的大小)</p><p>鼠标移动上去要突出显示的话，我们要设置当前的盒子要定位，（因为当前的位置要保留所以设置relative）,因为margin-left设置了，当前的右边框是被遮住了。</p><p>:two:css三角形之美<br><img src="./typora-img/Snipaste_2022-05-03_16-04-05.png" alt=""></p><h1 id="HTML5"><a href="#HTML5" class="headerlink" title="HTML5"></a>HTML5</h1><img src="./typora-img/Snipaste_2022-05-03_17-01-42.png" alt=""><h2 id="新增的语义标签"><a href="#新增的语义标签" class="headerlink" title="新增的语义标签"></a>新增的语义标签</h2><img src="./typora-img/Snipaste_2022-05-03_17-05-39.png" alt=""><h2 id="新增的多媒体标签"><a href="#新增的多媒体标签" class="headerlink" title="新增的多媒体标签"></a>新增的多媒体标签</h2><p>:one:audio<br><img src="./typora-img/Snipaste_2022-05-03_17-10-20.png" alt=""></p><p><strong>因为不同的浏览器支持不同的格式 ，我们采取解决方案是准备多个格式</strong></p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>audio</span> <span class="token attr-name">controls</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>media/show.mp3<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>audio/mpeg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>source</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>media/show.ogg<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>audio/ogg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>source</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>audio</span><span class="token punctuation">></span></span></code></pre><p>:two:video<br><img src="./typora-img/Snipaste_2022-05-03_17-15-00.png" alt=""></p><h2 id="新增的input标签"><a href="#新增的input标签" class="headerlink" title="新增的input标签"></a>新增的input标签</h2><img src="./typora-img/Snipaste_2022-05-03_17-16-55.png" alt=""><img src="./typora-img/Snipaste_2022-05-03_17-17-48.png" alt=""><h1 id="css3"><a href="#css3" class="headerlink" title="css3"></a>css3</h1><p><strong>类选择器 属性选择器 伪类选择器 权重为10</strong></p><h3 id="伪类选择器-1"><a href="#伪类选择器-1" class="headerlink" title="伪类选择器"></a>伪类选择器</h3><img src="./typora-img/Snipaste_2022-05-03_17-24-48.png" alt=""><img src="./typora-img/Snipaste_2022-05-03_17-26-05.png" alt=""><img src="./typora-img/Snipaste_2022-05-03_17-27-33.png" alt=""><h3 id="伪元素实现字体图标"><a href="#伪元素实现字体图标" class="headerlink" title="伪元素实现字体图标"></a>伪元素实现字体图标</h3><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>IE<span class="token punctuation">=</span>edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./font/iconfont.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">        <span class="token property">p</span><span class="token punctuation">:</span><span class="token punctuation">:</span>after &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>            <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">'\e652'</span><span class="token punctuation">;</span>            <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">'iconfont'</span><span class="token punctuation">;</span>            <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">30</span>px<span class="token punctuation">;</span>        &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>     </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>icon-crame iconfont<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h2 id="2D转换-transform"><a href="#2D转换-transform" class="headerlink" title="2D转换(transform)"></a>2D转换(transform)</h2><h3 id="过渡"><a href="#过渡" class="headerlink" title="过渡"></a>过渡</h3><p><strong>过渡放在本身，谁做动画谁加transition</strong></p><h3 id="——移动"><a href="#——移动" class="headerlink" title="——移动"></a>——移动</h3><p><strong>translate移动不会影响其它元素的位置</strong></p><p>translate的百分比是相对于自身来的:translate(50%,50%)</p><h3 id="——旋转"><a href="#——旋转" class="headerlink" title="——旋转"></a>——旋转</h3><pre class=" language-css"><code class="language-css">div &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> tomato<span class="token punctuation">;</span>    <span class="token property">transition</span><span class="token punctuation">:</span> all <span class="token number">1</span>s<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">/* div鼠标绕过 但是不包含son 和ipt 的div */</span><span class="token property">div</span><span class="token punctuation">:</span><span class="token property">hover</span><span class="token punctuation">:</span><span class="token function">not</span><span class="token punctuation">(</span><span class="token number">.</span>son, <span class="token number">.</span>ipt<span class="token punctuation">)</span> &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/* 移动 */</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span><span class="token number">200</span>px,<span class="token number">200</span>px<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/* 旋转 */</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">45</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span><span class="token number">.</span>son &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span><span class="token number">50%</span>,<span class="token number">50%</span><span class="token punctuation">)</span><span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span><span class="token number">.</span>ipt &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>    <span class="token property">margin-top</span><span class="token punctuation">:</span> <span class="token number">50</span>px<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">50</span>px<span class="token punctuation">;</span>    <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">1</span>px solid <span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token hexcode">#fff</span><span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span><span class="token number">.</span><span class="token property">ipt</span><span class="token punctuation">:</span><span class="token punctuation">:</span>after &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">5</span>px<span class="token punctuation">;</span>    <span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span>    <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">;</span>    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">5</span>px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">5</span>px<span class="token punctuation">;</span>    <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">2</span>px solid red<span class="token punctuation">;</span>    <span class="token property">border-color</span><span class="token punctuation">:</span> red red transparent transparent<span class="token punctuation">;</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">135</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><h3 id="2D转换中心点"><a href="#2D转换中心点" class="headerlink" title="2D转换中心点"></a>2D转换中心点</h3><p>transform-origin: 50% 50% | center center默认(可以设置方位名词和px) ｜ transform-origin: left center;</p><h3 id="2D转换缩放scale"><a href="#2D转换缩放scale" class="headerlink" title="2D转换缩放scale"></a>2D转换缩放scale</h3><p>transform: scale(x,y)</p><p>:one:里面写数字不带单位，是倍数的意思</p><p>:two:只写一个参数 是等比例缩放</p><p> :three:不影响其它盒子，来实现缩放的中心点,也可以设置其它的缩放点</p><h3 id="综合性写法"><a href="#综合性写法" class="headerlink" title="综合性写法"></a>综合性写法</h3><img src="./typora-img/Snipaste_2022-05-03_19-09-11.png" alt=""><h2 id="动画"><a href="#动画" class="headerlink" title="动画"></a>动画</h2><p>:one:先定义动画（@keyframes）</p><p>:two:使用动画:animation<br><img src="./typora-img/Snipaste_2022-05-04_10-50-54.png" alt=""><br><img src="./typora-img/Snipaste_2022-05-04_11-01-37.png" alt=""></p><p><strong>animation的简写不包含:animation-play-state</strong><br><img src="./typora-img/Snipaste_2022-05-04_11-23-10.png" alt=""></p><h3 id="热点图案例"><a href="#热点图案例" class="headerlink" title="热点图案例"></a>热点图案例</h3><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>IE<span class="token punctuation">=</span>edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>animation<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">                  <span class="token number">.</span>map &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>                <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>                <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">400</span>px<span class="token punctuation">;</span>                <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">400</span>px<span class="token punctuation">;</span>                <span class="token property">background-color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span>            &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>            <span class="token number">.</span>city &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>                <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>                <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">300</span>px<span class="token punctuation">;</span>                <span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">50</span>px<span class="token punctuation">;</span>            &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>            <span class="token number">.</span>city <span class="token number">.</span>addr &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>                <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">310</span>px<span class="token punctuation">;</span>                <span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">60</span>px<span class="token punctuation">;</span>                <span class="token property">z-index</span><span class="token punctuation">:</span> <span class="token number">9</span><span class="token punctuation">;</span>            &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>            <span class="token number">.</span>map <span class="token number">.</span>city div&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>                <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>                <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span>                <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">505</span><span class="token punctuation">;</span>                <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">6</span>px<span class="token punctuation">;</span>                <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">6</span>px<span class="token punctuation">;</span>                <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span>-<span class="token number">50%</span>,-<span class="token number">50%</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span>                <span class="token property">background-color</span><span class="token punctuation">:</span> tomato<span class="token punctuation">;</span>            &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>            <span class="token number">.</span>map div[class^=<span class="token string">'ring'</span>] &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>                <span class="token property">background-color</span><span class="token punctuation">:</span> transparent<span class="token punctuation">;</span>                <span class="token property">box-shadow</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token number">10</span>px <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">240</span>, <span class="token number">110</span>, <span class="token number">167</span>, <span class="token number">0.826</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token property">animation</span><span class="token punctuation">:</span> shine <span class="token number">2</span>s linear infinite<span class="token punctuation">;</span>            &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>            <span class="token number">.</span>map div<span class="token number">.</span>ring<span class="token number">2</span> &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>                <span class="token property">animation-delay</span><span class="token punctuation">:</span> <span class="token number">.5</span>s<span class="token punctuation">;</span>            &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>            <span class="token number">.</span>map div<span class="token number">.</span>ring<span class="token number">3</span> &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>                <span class="token property">animation-delay</span><span class="token punctuation">:</span> <span class="token number">.5</span>s<span class="token punctuation">;</span>            &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>            <span class="token atrule"><span class="token rule">@keyframes</span> shine &amp;#123<span class="token punctuation">;</span></span>                <span class="token number">50%</span> &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>                    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">15</span>px<span class="token punctuation">;</span>                    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">15</span>px<span class="token punctuation">;</span>                    <span class="token property">opacity</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">;</span>                &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>                <span class="token number">100%</span> &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>                    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">30</span>px<span class="token punctuation">;</span>                    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">30</span>px<span class="token punctuation">;</span>                    <span class="token property">opacity</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>                &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>            &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>map<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>city<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>addr<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>北京<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>pointer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ring1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ring2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ring3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h3 id="行走的兔子"><a href="#行走的兔子" class="headerlink" title="行走的兔子"></a>行走的兔子</h3><pre class=" language-css"><code class="language-css"><span class="token number">.</span>box &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">132</span>px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">271</span>px<span class="token punctuation">;</span>    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token url">url(./images/day10/bigtap-mitu-queue-big.png)</span><span class="token punctuation">;</span>    <span class="token property">animation</span><span class="token punctuation">:</span> walk <span class="token number">1</span>s  infinite <span class="token function">steps</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span><span class="token atrule"><span class="token rule">@keyframes</span> walk &amp;#123<span class="token punctuation">;</span></span>    from &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>        <span class="token property">background-position</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">0</span><span class="token punctuation">;</span>    &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>    to &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>        <span class="token property">background-position</span><span class="token punctuation">:</span> -<span class="token number">396</span>px <span class="token number">0</span><span class="token punctuation">;</span>    &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><h2 id="3D转换"><a href="#3D转换" class="headerlink" title="3D转换"></a>3D转换</h2><h3 id="translate3d-x-y-z"><a href="#translate3d-x-y-z" class="headerlink" title="translate3d:(x,y,z)"></a>translate3d:(x,y,z)</h3><h3 id="perspective透视"><a href="#perspective透视" class="headerlink" title="perspective透视"></a>perspective透视</h3><p> <strong>父盒子加：      perspective: xx px;</strong><br> <img src="./typora-img/Snipaste_2022-05-04_13-19-45.png" alt=""></p><h3 id="3d旋转-rotate3d"><a href="#3d旋转-rotate3d" class="headerlink" title="3d旋转 rotate3d"></a>3d旋转 rotate3d</h3><img src="./typora-img/Snipaste_2022-05-04_13-36-09.png" alt=""><pre class=" language-css"><code class="language-css"> <span class="token comment" spellcheck="true">/* z轴必须要设置了perspectiveft 才可以有效 */</span>  <span class="token comment" spellcheck="true">/* transform: translate3d(100px,100px,100px); */</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateX</span><span class="token punctuation">(</span><span class="token number">45</span>deg<span class="token punctuation">)</span> <span class="token punctuation">;</span> <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateY</span><span class="token punctuation">(</span><span class="token number">45</span>deg<span class="token punctuation">)</span> <span class="token punctuation">;</span> <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateZ</span><span class="token punctuation">(</span><span class="token number">45</span>deg<span class="token punctuation">)</span> <span class="token punctuation">;</span> </code></pre><h3 id="3d呈现-tranform-style"><a href="#3d呈现-tranform-style" class="headerlink" title="3d呈现 tranform-style"></a>3d呈现 tranform-style</h3><p><strong>tranform-style: preserve-3d;</strong><br><img src="./typora-img/Snipaste_2022-05-04_13-49-34.png" alt=""></p><pre class=" language-css"><code class="language-css"><span class="token number">.</span>wrap &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span>    <span class="token property">transition</span><span class="token punctuation">:</span> all <span class="token number">2</span>s<span class="token punctuation">;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span> auto<span class="token punctuation">;</span>    <span class="token property">perspective</span><span class="token punctuation">:</span> <span class="token number">500</span>px<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/* 写在父级 影响的是子元素  保持3d立体空间 */</span>    <span class="token property">transform-style</span><span class="token punctuation">:</span> preserve-<span class="token number">3</span>d<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span><span class="token number">.</span><span class="token property">wrap</span><span class="token punctuation">:</span>hover &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateY</span><span class="token punctuation">(</span><span class="token number">80</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>div[class^=<span class="token string">'box'</span>] &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> tomato<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>div<span class="token number">.</span>box<span class="token number">2</span> &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> purple<span class="token punctuation">;</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateX</span><span class="token punctuation">(</span><span class="token number">45</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><pre class=" language-css"><code class="language-css"><span class="token number">.</span>wrapper &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">100</span>px auto<span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">30</span>px<span class="token punctuation">;</span>    <span class="token property">perspective</span><span class="token punctuation">:</span> <span class="token number">800</span>px<span class="token punctuation">;</span>    <span class="token property">transition</span><span class="token punctuation">:</span> all <span class="token number">1</span>s<span class="token punctuation">;</span>    <span class="token property">transform-style</span><span class="token punctuation">:</span> preserve-<span class="token number">3</span>d<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span><span class="token number">.</span><span class="token property">wrapper</span><span class="token punctuation">:</span>hover &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateX</span><span class="token punctuation">(</span><span class="token number">90</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span><span class="token number">.</span>front,<span class="token number">.</span>back &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>     <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>    <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span><span class="token number">.</span>front &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">z-index</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateZ</span><span class="token punctuation">(</span><span class="token number">50%</span><span class="token punctuation">)</span><span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span><span class="token number">.</span>back &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> purple<span class="token punctuation">;</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateY</span><span class="token punctuation">(</span><span class="token number">50%</span><span class="token punctuation">)</span> <span class="token function">rotateX</span><span class="token punctuation">(</span>-<span class="token number">90</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><h3 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h3><pre class=" language-css"><code class="language-css">&lt;!DOCTYPE html>&lt;html lang=<span class="token string">"en"</span>>&lt;head>&lt;meta charset=<span class="token string">"UTF-8"</span>>&lt;meta http-equiv=<span class="token string">"X-UA-Compatible"</span> content=<span class="token string">"IE=edge"</span>>&lt;meta name=<span class="token string">"viewport"</span> content=<span class="token string">"width=device-width, initial-scale=1.0"</span>>&lt;title>Document&lt;/title>&lt;style><span class="token atrule"><span class="token rule">@keyframes</span> run &amp;#123<span class="token punctuation">;</span></span>    from &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateY</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>    to &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateY</span><span class="token punctuation">(</span><span class="token number">360</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span>    &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span><span class="token number">.</span>cube &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">100</span>px auto<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">300</span>px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">300</span>px<span class="token punctuation">;</span>    <span class="token property">transform-style</span><span class="token punctuation">:</span> preserve-<span class="token number">3</span>d<span class="token punctuation">;</span>    <span class="token property">perspective</span><span class="token punctuation">:</span> <span class="token number">1400</span>px<span class="token punctuation">;</span>    <span class="token property">animation</span><span class="token punctuation">:</span> run <span class="token number">10</span>s linear infinite<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span><span class="token number">.</span>cube div[class^=<span class="token string">"box"</span>] &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token url">url(./images/宫村.png)</span> no-repeat center<span class="token punctuation">;</span>    <span class="token property">background-size</span><span class="token punctuation">:</span> contain<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span><span class="token number">.</span>box<span class="token number">1</span> &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateZ</span><span class="token punctuation">(</span><span class="token number">300</span>px<span class="token punctuation">)</span> <span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span><span class="token number">.</span>box<span class="token number">2</span> &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateY</span><span class="token punctuation">(</span><span class="token number">60</span>deg<span class="token punctuation">)</span> <span class="token function">translateZ</span><span class="token punctuation">(</span><span class="token number">300</span>px<span class="token punctuation">)</span><span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span><span class="token number">.</span>box<span class="token number">3</span> &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateY</span><span class="token punctuation">(</span><span class="token number">120</span>deg<span class="token punctuation">)</span> <span class="token function">translateZ</span><span class="token punctuation">(</span><span class="token number">300</span>px<span class="token punctuation">)</span><span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span><span class="token number">.</span>box<span class="token number">4</span> &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateY</span><span class="token punctuation">(</span><span class="token number">180</span>deg<span class="token punctuation">)</span> <span class="token function">translateZ</span><span class="token punctuation">(</span><span class="token number">300</span>px<span class="token punctuation">)</span><span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span><span class="token number">.</span>box<span class="token number">5</span> &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateY</span><span class="token punctuation">(</span><span class="token number">240</span>deg<span class="token punctuation">)</span> <span class="token function">translateZ</span><span class="token punctuation">(</span><span class="token number">300</span>px<span class="token punctuation">)</span><span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span><span class="token number">.</span>box<span class="token number">6</span> &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotateY</span><span class="token punctuation">(</span><span class="token number">300</span>deg<span class="token punctuation">)</span> <span class="token function">translateZ</span><span class="token punctuation">(</span><span class="token number">300</span>px<span class="token punctuation">)</span><span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>&lt;/style>&lt;/head>&lt;body>&lt;div class=<span class="token string">"cube"</span>>&lt;div class=<span class="token string">"box1"</span>>&lt;/div>&lt;div class=<span class="token string">"box2"</span>>&lt;/div>&lt;div class=<span class="token string">"box3"</span>>&lt;/div>&lt;div class=<span class="token string">"box4"</span>>&lt;/div>&lt;div class=<span class="token string">"box5"</span>>&lt;/div>&lt;div class=<span class="token string">"box6"</span>>&lt;/div>&lt;/div>&lt;/body>&lt;/html></code></pre><h2 id="浏览器私有前缀"><a href="#浏览器私有前缀" class="headerlink" title="浏览器私有前缀"></a>浏览器私有前缀</h2><img src="./typora-img/Snipaste_2022-05-04_16-52-56.png" alt=""><h1 id="移动端布局"><a href="#移动端布局" class="headerlink" title="移动端布局"></a>移动端布局</h1><p><strong>移动端现在主要对webkit进行兼容</strong></p><h2 id="视口"><a href="#视口" class="headerlink" title="视口"></a>视口</h2><p>浏览器页面内容的屏幕区域，</p><p>:one:  布局视口：内容可以显示全，但是内容太小</p><p>:two:视觉视口:  网站的宽度</p><p>:three:<strong>理想视口</strong>：布局视口的宽度和手机屏幕一样宽，添加meta标签</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1.0,maximum-scale<span class="token punctuation">=</span>1.0,minimum-scale<span class="token punctuation">=</span>1.0,user-scalable<span class="token punctuation">=</span>0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></code></pre><h2 id="二倍图"><a href="#二倍图" class="headerlink" title="二倍图"></a>二倍图</h2><h3 id="物理像素："><a href="#物理像素：" class="headerlink" title="物理像素："></a>物理像素：</h3><p>屏幕显示的最小颗粒</p><h3 id="物理像素比："><a href="#物理像素比：" class="headerlink" title="物理像素比："></a>物理像素比：</h3><p>1px可以显示的物理像素点的个数，</p><p>pc端是1比1：移动端是1比多。（我们就要准备几倍图，然后缩小，他在移动端会自动放大就不会模糊）</p><h2 id="移动端开发选择"><a href="#移动端开发选择" class="headerlink" title="移动端开发选择"></a>移动端开发选择</h2><h3 id="单独移动端"><a href="#单独移动端" class="headerlink" title="单独移动端"></a>单独移动端</h3><p>:one:支持webkit，可以放心用h5,c3</p><p>:two:用normalize.css来初始化</p><h4 id="流式布局（百分比）"><a href="#流式布局（百分比）" class="headerlink" title="流式布局（百分比）"></a>流式布局（百分比）</h4><p>不用给宽度，而是用百分比来指定， 我们用max-width,min-width来限制它最大｜小宽度</p><pre class=" language-html"><code class="language-html">1.文件结构2.meta视口标签3.设置body: width:100%; min-width:320px; max-width:640px;margin: 0 auto; font-size:14px;</code></pre><img src="./typora-img/2022-05-06_20-47-08.png" alt=""><h4 id="flex弹性布局"><a href="#flex弹性布局" class="headerlink" title="flex弹性布局"></a>flex弹性布局</h4><h4 id="less-rem-media"><a href="#less-rem-media" class="headerlink" title="less + rem + media"></a>less + rem + media</h4><h4 id="混合布局"><a href="#混合布局" class="headerlink" title="混合布局"></a>混合布局</h4><p> <strong>移动端技术解决方案</strong><br> <img src="./typora-img/Snipaste_2022-05-06_19-38-30.png" alt=""></p><h3 id="响应式"><a href="#响应式" class="headerlink" title="响应式"></a>响应式</h3><p><strong>判断屏幕宽度来改变样式</strong></p><h4 id="media"><a href="#media" class="headerlink" title="media"></a>media</h4><h4 id="bootstarp"><a href="#bootstarp" class="headerlink" title="bootstarp"></a>bootstarp</h4><h2 id="flex布局"><a href="#flex布局" class="headerlink" title="flex布局"></a>flex布局</h2><p>flex操作方便，布局简单，兼容性较差。</p><p><strong>任何的容器都可以设置为flex布局，当设置flex布局后，子元素的float,clear,vertical-algin属性将失效。</strong></p><h3 id="flex容器：采用flex布局的元素"><a href="#flex容器：采用flex布局的元素" class="headerlink" title="flex容器：采用flex布局的元素"></a>flex容器：采用flex布局的元素</h3><h3 id="flex项目：flex-item"><a href="#flex项目：flex-item" class="headerlink" title="flex项目：flex item"></a>flex项目：flex item</h3><h3 id="flex-direction"><a href="#flex-direction" class="headerlink" title="flex-direction"></a>flex-direction</h3><p>设置主轴的方向</p><h3 id="justify-content"><a href="#justify-content" class="headerlink" title="justify-content:"></a>justify-content:</h3><p>设置主轴的子元素排列方式</p><h3 id="flex-wrap"><a href="#flex-wrap" class="headerlink" title="flex-wrap"></a>flex-wrap</h3><p>设置子元素是否换行</p><h3 id="align-content"><a href="#align-content" class="headerlink" title="align-content"></a>align-content</h3><p>设置侧轴的子元素排列方式（多行）</p><h3 id="align-items"><a href="#align-items" class="headerlink" title="align-items"></a>align-items</h3><p>设置侧轴的子元素排列方式（单行）</p><h3 id="flex-flow"><a href="#flex-flow" class="headerlink" title="flex-flow"></a>flex-flow</h3><p>复合属性： flex-direction + flex-wrap</p><p>———–子项的属性</p><h3 id="flex"><a href="#flex" class="headerlink" title="flex"></a>flex</h3><p>子项目占剩余空间的份数</p><h3 id="align-self"><a href="#align-self" class="headerlink" title="align-self"></a>align-self</h3><p>控制自己在侧轴的排列方式</p><h3 id="order"><a href="#order" class="headerlink" title="order"></a>order</h3><p>定义子项目的排列顺序</p><h3 id="背景渐变"><a href="#背景渐变" class="headerlink" title="背景渐变"></a>背景渐变</h3><pre class=" language-css"><code class="language-css"><span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">-webkit-linear-gradient</span><span class="token punctuation">(</span>left , red, blue<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h2 id="rem适配方案"><a href="#rem适配方案" class="headerlink" title="rem适配方案"></a>rem适配方案</h2><p>作用：:one:文字随屏幕大小变化 :two:高度可变化 :three:屏幕变化宽高等比例缩放</p><p>rem: root em 根据html字体大小来说 ，可以修改html里面的文字大小来整体控制</p><p>em相对于父元素字体大小</p><h2 id="媒体查询"><a href="#媒体查询" class="headerlink" title="媒体查询"></a>媒体查询</h2><p>针对不同尺寸设置不同的样式，重置浏览器过程中可重置样式。</p><p><strong>媒体查询一般从小到大顺序来</strong></p><pre class=" language-css"><code class="language-css"><span class="token atrule"><span class="token rule">@media</span> screen and <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span>800px<span class="token punctuation">)</span> &amp;#123<span class="token punctuation">;</span></span>    body &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>        <span class="token property">background-color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span>    &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>//<span class="token property">max-width</span><span class="token punctuation">:</span>最大<span class="token number">800</span>px <span class="token property">min-width</span><span class="token punctuation">:</span>最小宽度</code></pre><h3 id="引入资源"><a href="#引入资源" class="headerlink" title="引入资源"></a>引入资源</h3><p>根据不同的屏幕引入不同的css文件。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>style320.css<span class="token punctuation">"</span></span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>screen and (min-width: 320px)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>style640.css<span class="token punctuation">"</span></span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>screen and (min-width: 640px)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></code></pre><h2 id="响应式Bootstrap"><a href="#响应式Bootstrap" class="headerlink" title="响应式Bootstrap"></a>响应式Bootstrap</h2><p>原理：不同屏幕下，通过媒体查询来改变布局容器的大小，来实现不同样式变化</p><p>container<br>row</p><ul><li>row可以取消父元素的padding，并设置高度种父级一样高<br>col-lg-number: number 1~12<br>col-md-number<br>col-sm-number<br>col-xs-number</li><li>列偏移number份 偏移为12减 已有盒子份数<br>col-md-offset-number</li></ul><!-- 列排序 --><p>col-md-pull-number<br>col-md-push-number</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>row<span class="token punctuation">'</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>col-lg-4<span class="token punctuation">'</span></span> <span class="token attr-name">col-lg-push-8</span><span class="token punctuation">></span></span>左侧<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>col-lg-8<span class="token punctuation">'</span></span> <span class="token attr-name">col-lg-pull-4</span><span class="token punctuation">></span></span>右侧<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre><ul><li>响应式工具：实现不同屏幕下的显示与隐藏<br>hidden-xs:超小屏下隐藏<br>hidden-sm<br>hidden-md<br>hidden-lg</li></ul><p>visible-xs:超小屏下显示<br>visible-sm<br>visible-md<br>visible-lg</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Promise + Axios学习笔记（含源码分析）</title>
      <link href="/2022/06/16/promise-axios-xue-xi-bi-ji-han-yuan-ma-fen-xi/"/>
      <url>/2022/06/16/promise-axios-xue-xi-bi-ji-han-yuan-ma-fen-xi/</url>
      
        <content type="html"><![CDATA[<hr><h2 id="abbrlink-1"><a href="#abbrlink-1" class="headerlink" title="abbrlink: 1"></a>abbrlink: 1</h2><h1 id="AJAX"><a href="#AJAX" class="headerlink" title="AJAX"></a>AJAX</h1><p>定义：异步的js和xml</p><h3 id="优点："><a href="#优点：" class="headerlink" title="优点："></a>优点：</h3><ul><li>无刷新获取数据</li><li>根据用户事件来更新部分页面内容</li></ul><h3 id="缺点："><a href="#缺点：" class="headerlink" title="缺点："></a>缺点：</h3><ul><li>无浏览历史，不能回退</li><li>存在跨域问题</li><li>SEO不友好（爬虫）</li></ul><h2 id="XML"><a href="#XML" class="headerlink" title="XML"></a>XML</h2><p>可标记语言：传输和存储数据。<br>HTML：网页中<strong>呈现</strong>数据。<br>xml现在已经被json替代了</p><h2 id="HTTP协议"><a href="#HTTP协议" class="headerlink" title="HTTP协议"></a>HTTP协议</h2><p><strong>浏览器和万维网服务器之间相互通信的规则。</strong><br>webservice,rest架构离不开对http协议的认识<br>:one:webservice &#x3D; http + xml<br>:two:rest &#x3D; http + json<br><strong>协议</strong>：多方都遵守共同的一个规范。</p><h3 id="HTTP的工作流程"><a href="#HTTP的工作流程" class="headerlink" title="HTTP的工作流程"></a>HTTP的工作流程</h3><ul><li>0.原始状态：client ,server没有关系</li><li>1.建立连接，发送请求</li><li>2.沿着连接，返回响应信息</li><li>3.响应后，又断开连接，没有关系</li></ul><h3 id="HTTP请求信息和响应信息格式"><a href="#HTTP请求信息和响应信息格式" class="headerlink" title="HTTP请求信息和响应信息格式"></a>HTTP请求信息和响应信息格式</h3><p>浏览器可以发送http协议，但不只是浏览器发送http协议</p><h3 id="请求报文："><a href="#请求报文：" class="headerlink" title="请求报文："></a>请求报文：</h3><p>:one:请求行:two:请求头信息:three:请求体</p><ul><li>请求行：:one:请求方式 :two:请求路径url :three:所用的协议<ul><li>请求方式：get | post | put | delete | trace…</li></ul></li><li>请求头： <ul><li>Host:<a href="http://www.baidu.com/">www.baidu.com</a></li><li>Cookie: BAIDUID&#x3D;XXXXXXXXXX;BAIDUSID&#x3D;XXXX;（sid：sessionID）</li><li>Content-Type: application&#x2F;x-www-from-urlencoded | applicaton&#x2F;json</li></ul></li><li>请求体： :one: username&#x3D;tom&amp;pwd&#x3D;123 :two: {“username:,”tom”,”pwd”:123} &#x3D;&gt;(application&#x2F;json的格式)</li></ul><h3 id="响应报文："><a href="#响应报文：" class="headerlink" title="响应报文："></a>响应报文：</h3><ul><li>响应行：:one:协议版本 :two:状态码 :three:状态文本<ul><li>status: <ul><li>200:请求成功 </li><li>404: not found 无法找到请求资源</li><li>201：已创建</li><li>401：未授权</li><li>500：服务器内部错误</li></ul></li></ul></li><li>响应头信息：key : value<ul><li>Content-Type”: text&#x2F;html ;charset&#x3D;utf-8</li><li>Set-Cookie:BD_CK_SAM&#x3D;1;path&#x3D;&#x2F;</li></ul></li><li>响应体：html内容 | json文本 | js&#x2F;css |图片</li></ul><h3 id="发ajax请求"><a href="#发ajax请求" class="headerlink" title="发ajax请求"></a>发ajax请求</h3><pre class=" language-js"><code class="language-js">btn<span class="token punctuation">.</span>onclick <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 创建对象</span>    <span class="token keyword">const</span> xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">// 初始化 设置请求方式和URL</span>    xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">'get'</span><span class="token punctuation">,</span><span class="token string">'http://127.0.0.1:8000/server'</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">// 发请求</span>    xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">// 事件绑定</span>    xhr<span class="token punctuation">.</span>onreadystatechange <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>readystate <span class="token operator">===</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>status <span class="token operator">>=</span> <span class="token number">200</span> <span class="token operator">&amp;&amp;</span> xhr<span class="token punctuation">.</span>status <span class="token operator">&lt;</span> <span class="token number">300</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            res<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> xhr<span class="token punctuation">.</span>response        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><h1 id="Promise"><a href="#Promise" class="headerlink" title="Promise"></a>Promise</h1><p>es6进行异步编程的新解决方案，es5是回调函数。</p><h3 id="优点：-1"><a href="#优点：-1" class="headerlink" title="优点："></a>优点：</h3><ul><li>指定回调函数的方式更加灵活（给promise对象绑定回调函数）</li><li>支持链式调用，可解决回调地狱问题<br>resove | reject 都是函数类型的数据。</li></ul><pre class=" language-js"><code class="language-js"><span class="token keyword">const</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span>reject<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> n <span class="token operator">=</span> <span class="token number">1</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>n <span class="token operator">&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 将promise状态设为 成功</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token keyword">else</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token function">reject</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 将promise状态设为 失败</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'成功的回调'</span><span class="token operator">+</span>value<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span><span class="token punctuation">(</span>reason<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'失败的回调'</span><span class="token operator">+</span>reason<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span></code></pre><h2 id="util-promisify方法"><a href="#util-promisify方法" class="headerlink" title="util.promisify方法"></a>util.promisify方法</h2><p>转成错误优先的promise风格的方法。</p><pre class=" language-js"><code class="language-js"><span class="token keyword">const</span> util <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'util'</span><span class="token punctuation">)</span><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'fs'</span><span class="token punctuation">)</span><span class="token keyword">const</span> mineReadFile <span class="token operator">=</span> util<span class="token punctuation">.</span><span class="token function">promisify</span><span class="token punctuation">(</span>fs<span class="token punctuation">.</span>readFile<span class="token punctuation">)</span><span class="token function">mineReadFile</span><span class="token punctuation">(</span><span class="token string">'./test.txt'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>data <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>reason <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>reason<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span></code></pre><h2 id="promise的状态"><a href="#promise的状态" class="headerlink" title="promise的状态"></a>promise的状态</h2><p>实例对象中的一个属性 【promiseState】</p><ul><li>pending 未决定的</li><li>resolved | fullfilled 成功</li><li>rejected 失败</li></ul><p>结果只能由pending变成成功 | 失败，且只能改变一次。</p><h2 id="promise对象的值"><a href="#promise对象的值" class="headerlink" title="promise对象的值"></a>promise对象的值</h2><p>实例对象中的另一个属性 【promiseResult】<br>保存对象异步任务【成功 | 失败】结果</p><ul><li>resolve()</li><li>reject()</li></ul><h2 id="promise工作流程"><a href="#promise工作流程" class="headerlink" title="promise工作流程"></a>promise工作流程</h2><img src="./media/promise工作流程.png"><h2 id="API"><a href="#API" class="headerlink" title="API"></a>API</h2><p>promise构造函数： promise(excutor) {}</p><ul><li>excutor函数： 执行器，(resolve,reject) &#x3D;&gt; {} ,它是在new Promise时，就同步执行的。</li></ul><h3 id="promise-resolve方法"><a href="#promise-resolve方法" class="headerlink" title="promise.resolve方法"></a>promise.resolve方法</h3><pre class=" language-js"><code class="language-js">       <span class="token comment" spellcheck="true">// 如果传入参数为非promise类型对象，返回结果为成功的promise对象</span>        <span class="token comment" spellcheck="true">// 如果传入的参数是promise类型对象，结果取决于 promise对象的结果</span>    <span class="token keyword">let</span> p1 <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p1<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> p2 <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span>reject<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// resolve('ok')</span>        <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">'error'</span><span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>        value <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>        reason <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>reason<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token punctuation">)</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p2<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="promise-reject方法"><a href="#promise-reject方法" class="headerlink" title="promise.reject方法"></a>promise.reject方法</h3><p>无论传入什么，返回一个失败的promise对象</p><h3 id="promise-all方法"><a href="#promise-all方法" class="headerlink" title="promise.all方法"></a>promise.all方法</h3><p>(promises) &#x3D;&gt; {},promises包含n个promise的数组<br>它返回一个新的promise，只有所有promise都成功才成功，有一个失败就直接失败。</p><pre class=" language-js"><code class="language-js">    <span class="token keyword">let</span> p1 <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p1<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> p2 <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span>reject<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// resolve('ok')</span>        <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">'error'</span><span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>       console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p2<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// promise.all</span>    <span class="token keyword">const</span> res <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span>p1<span class="token punctuation">,</span>p2<span class="token punctuation">]</span><span class="token punctuation">)</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// res的PromiseState是promise.all返回的状态，有一个失败就rejected</span></code></pre><h3 id="promise-race方法"><a href="#promise-race方法" class="headerlink" title="promise.race方法"></a>promise.race方法</h3><p>(promises) &#x3D;&gt; {},promises包含n个promise的数组<br>它返回一个新的promise，结果是数组中先第一个返回promise的结果，就是新promise结果</p><h3 id="promise改变状态的方式"><a href="#promise改变状态的方式" class="headerlink" title="promise改变状态的方式"></a>promise改变状态的方式</h3><ul><li>resolve(): pending &#x3D;&gt; fulfilled</li><li>reject(): pending &#x3D;&gt; rejected</li><li>throw: pending &#x3D;&gt; rejected</li></ul><h3 id="能否执行promise的多个回调（then后面的函数）"><a href="#能否执行promise的多个回调（then后面的函数）" class="headerlink" title="能否执行promise的多个回调（then后面的函数）"></a>能否执行promise的多个回调（then后面的函数）</h3><p>当promise改变对应状态时它的对应多个回调都会执行</p><h3 id="改变状态与定义回调的顺序"><a href="#改变状态与定义回调的顺序" class="headerlink" title="改变状态与定义回调的顺序"></a>改变状态与定义回调的顺序</h3><p>指定是定义，回调函数的执行要等到状态改变后才执行。</p><ul><li>如果promise中没有异步任务时，是先改变状态后定义回调</li><li>如果promise中有异步任务时，是先指定回调，再改变状态</li></ul><h3 id="then方法返回结果由什么决定"><a href="#then方法返回结果由什么决定" class="headerlink" title="then方法返回结果由什么决定"></a>then方法返回结果由什么决定</h3><pre class=" language-js"><code class="language-js"> <span class="token keyword">let</span> p2 <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span>reject<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// resolve('ok')</span>        <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">'error'</span><span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">const</span> result <span class="token operator">=</span> p2<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>        value <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>        reason <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token keyword">throw</span> <span class="token string">'出错了'</span>            <span class="token comment" spellcheck="true">// reject('error')</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">// Promise &amp;#123;&lt;pending>&amp;#125;[[Prototype]]: Promise[[PromiseState]]: "rejected"[[PromiseResult]]: "出错了"</span>    <span class="token comment" spellcheck="true">// result返回是一个promise，它的状态由then方法对应函数执行结果来决定then的结果</span></code></pre><h3 id="promise的then的链式调用"><a href="#promise的then的链式调用" class="headerlink" title="promise的then的链式调用"></a>promise的then的链式调用</h3><pre class=" language-js"><code class="language-js"><span class="token keyword">let</span> pp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span>reject<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">'ok'</span><span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>    pp<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>value <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">111</span><span class="token punctuation">,</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 111 'ok'</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>value <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 这个.then是上面then的状态结果 成功 undefined</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">222</span><span class="token punctuation">,</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 222 undefined</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span></code></pre><h3 id="promise异常穿透"><a href="#promise异常穿透" class="headerlink" title="promise异常穿透"></a>promise异常穿透</h3><p>最后的catch来对失败进行处理</p><pre class=" language-js"><code class="language-js"> <span class="token keyword">let</span> pp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span>reject<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// resolve('ok')</span>            <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">'error'</span><span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>    pp<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>value <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">111</span><span class="token punctuation">,</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>value <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">222</span><span class="token punctuation">,</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span>res <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span><span class="token string">'失败'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span></code></pre><h3 id="中断promise链"><a href="#中断promise链" class="headerlink" title="中断promise链"></a>中断promise链</h3><p>有且只有一种方法<br>返回一个pending状态的promise，我们知道只有promise状态改变才执行回调，返回一个pending的话，表示状态没改变就不会执行回调</p><pre class=" language-js"><code class="language-js"> <span class="token keyword">let</span> pp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span>reject<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// resolve('ok')</span>            <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">'error'</span><span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>    pp<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>value <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">111</span><span class="token punctuation">,</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 返回一个pending状态的promise</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>value <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">222</span><span class="token punctuation">,</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span>res <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span><span class="token string">'失败'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span></code></pre><h2 id="自定义（手写）promise"><a href="#自定义（手写）promise" class="headerlink" title="自定义（手写）promise"></a>自定义（手写）promise</h2><h3 id="梳理"><a href="#梳理" class="headerlink" title="梳理"></a>梳理</h3><ul><li>定义构造函数 | 类，要有excutor执行器</li><li>执行器里面要有resolve &amp; reject函数，来修改实例的promiseState和promiseResult</li><li>throw 也能修改实例的状态和值，用try-catch来调用resolve | reject</li><li>状态只能修改一次，从pending &#x3D;&gt; fulfilled | reject,(改变状态前判断是不是[pending])</li><li>为实例添加then方法来执行回调（根据promiseState状态来做选择）</li><li>执行器异步任务的实现，在then方法中保存回调函数，在状态改变时才执行</li><li>then方法指定多个回调，用数据每次push</li><li>同步任务-返回结果：1.返回非promise数据——成功的promise对象，2.返回promise对象，根据里面是状态来决定是成功 | 失败promise。（result instanceof Promise来判断）。如果是promise可以调用then方法，3.throw异常用try-catch</li><li>异步任务——返回结果：在pending时保存回调函数时要有执行回调的函数。函数内容和同步任务的一样</li><li>then方法完善：把同步异步任务的回调封装成函数。</li><li>异常穿透：添加catch方法，然后返回调用then方法，then中可以不传递参数（typeof xx !&#x3D; ‘function’），所以你在指定回调时，创建默认的回调</li><li>Promise.resolve封装：返回一个promise对象。 1.如果传入参数为非promise类型对象，返回结果为成功的promise对象，2. 如果传入的参数是promise类型对象，结果取决于 promise对象的结果</li><li>Promise.reject封装：始终返回一个失败的promise对象</li><li>Promise.all封装：promises数组中全部状态为成功才成功 否则失败</li><li>Promise.race封装：它返回一个新的promise，结果是数组中先第一个返回promise的结果，就是新promise结果</li><li>Promise.then方法回调异步执行：要等同步代码执行完才执行回调，在调用回调的地方加定时器。</li></ul><pre class=" language-js"><code class="language-js"><span class="token keyword">class</span> <span class="token class-name">Promise</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token function">constructor</span><span class="token punctuation">(</span>excutor<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 执行器函数同步调用——要接收传递的参数</span>        <span class="token comment" spellcheck="true">// 问题： resolve ,reject没定义， 用resolve(),说明是函数</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>PromiseState <span class="token operator">=</span> <span class="token string">'pending'</span> <span class="token comment" spellcheck="true">//状态只能修改一次</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>PromiseResult <span class="token operator">=</span> <span class="token keyword">null</span>        <span class="token keyword">const</span> that <span class="token operator">=</span> <span class="token keyword">this</span>        <span class="token comment" spellcheck="true">// 保存回调,then可以链式调用</span>        <span class="token comment" spellcheck="true">// this.callback = &amp;#123;&amp;#125;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>callbacks <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token comment" spellcheck="true">// 成功状态</span>        <span class="token comment" spellcheck="true">// 这里直接调用，this=>window</span>        <span class="token keyword">function</span> <span class="token function">resolve</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 确保状态只能修改一次</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>that<span class="token punctuation">.</span>PromiseState <span class="token operator">!==</span> <span class="token string">'pending'</span><span class="token punctuation">)</span> <span class="token keyword">return</span>            <span class="token comment" spellcheck="true">// 1.修改对象状态 promiseState</span>            that<span class="token punctuation">.</span>PromiseState <span class="token operator">=</span> <span class="token string">'fulfilled'</span>            <span class="token comment" spellcheck="true">// 2.设置对象结果 promiseResult</span>            that<span class="token punctuation">.</span>PromiseResult <span class="token operator">=</span> data            <span class="token comment" spellcheck="true">// 如果是异步时,要等状态改变才执行回调</span>            <span class="token comment" spellcheck="true">// if(that.callback.onResolved) that.callback.onResolved(data)</span>            that<span class="token punctuation">.</span>callbacks<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>item <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// 定时器解决then时里面是异步任务</span>                <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                    item<span class="token punctuation">.</span><span class="token function">onResolved</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>                <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 失败状态</span>        <span class="token keyword">function</span> <span class="token function">reject</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 确保状态只能修改一次</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>that<span class="token punctuation">.</span>PromiseState <span class="token operator">!==</span> <span class="token string">'pending'</span><span class="token punctuation">)</span> <span class="token keyword">return</span>            <span class="token comment" spellcheck="true">// 1.修改对象状态 promiseState</span>            that<span class="token punctuation">.</span>PromiseState <span class="token operator">=</span> <span class="token string">'rejected'</span>            <span class="token comment" spellcheck="true">// 2.设置对象结果 promiseResult</span>            that<span class="token punctuation">.</span>PromiseResult <span class="token operator">=</span> data            <span class="token comment" spellcheck="true">// 如果是异步时,要等状态改变才执行回调</span>            <span class="token comment" spellcheck="true">//  if(that.callback.onRejected) that.callback.onRejected(data)</span>            that<span class="token punctuation">.</span>callbacks<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>item <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// 定时器解决then时里面是异步任务</span>                <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                    item<span class="token punctuation">.</span><span class="token function">onRejected</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>                <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token function">excutor</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">error</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// throw改变状态的修改</span>            <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 添加then方法</span>    <span class="token comment" spellcheck="true">// 当promise改变对应状态时它的对应多个回调都会执行</span>    <span class="token function">then</span><span class="token punctuation">(</span>onResolved<span class="token punctuation">,</span> onRejected<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> that <span class="token operator">=</span> <span class="token keyword">this</span>        <span class="token comment" spellcheck="true">// 实现异常穿透</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> onRejected <span class="token operator">!==</span> <span class="token string">'function'</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            onRejected <span class="token operator">=</span> reason <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token keyword">throw</span> reason            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> onResolved <span class="token operator">!==</span> <span class="token string">'function'</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            onResolved <span class="token operator">=</span> value <span class="token operator">=</span><span class="token operator">></span> value        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 调用回调函数</span>        <span class="token comment" spellcheck="true">// 同步修改then方法的返回</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 封装函数</span>            <span class="token keyword">function</span> <span class="token function">callback</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token function">type</span><span class="token punctuation">(</span>that<span class="token punctuation">.</span>PromiseResult<span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">// result是不是promise实例对象</span>                <span class="token keyword">try</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>result <span class="token keyword">instanceof</span> <span class="token class-name">Promise</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                        result<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>res <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                            <span class="token function">resolve</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>                        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span> err <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                            <span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>                        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>                    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token keyword">else</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                        <span class="token comment" spellcheck="true">// 不是 结果的对象直接为 成功</span>                        <span class="token function">resolve</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>                    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>                <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">error</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                    <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>                <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>PromiseState <span class="token operator">===</span> <span class="token string">'fulfilled'</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// 定时器解决then时里面是异步任务</span>                <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                    <span class="token function">callback</span><span class="token punctuation">(</span>onResolved<span class="token punctuation">)</span>                <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>PromiseState <span class="token operator">===</span> <span class="token string">'rejected'</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// 定时器解决then时里面是异步任务</span>                <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                    <span class="token function">callback</span><span class="token punctuation">(</span>onRejected<span class="token punctuation">)</span>                <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 当状态没改变时，我们要保存回调</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>PromiseState <span class="token operator">===</span> <span class="token string">'pending'</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>callbacks<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                    <span class="token comment" spellcheck="true">// 异步的修改then状态值</span>                    onResolved<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                        <span class="token comment" spellcheck="true">// 执行成功的回调</span>                        <span class="token function">callback</span><span class="token punctuation">(</span>onResolved<span class="token punctuation">)</span>                    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>                    onRejected<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                        <span class="token comment" spellcheck="true">// 失败的回调</span>                        <span class="token function">callback</span><span class="token punctuation">(</span>onRejected<span class="token punctuation">)</span>                    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>                <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 添加catch方法</span>    <span class="token comment" spellcheck="true">// 最后的catch来对失败进行处理</span>    <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">onRejected</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// catch功能和then一样，只是没有onResolved</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>undefined<span class="token punctuation">,</span> onRejected<span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 添加resolve方法</span>    <span class="token comment" spellcheck="true">// 如果传入参数为非promise类型对象，返回结果为成功的promise对象</span>    <span class="token comment" spellcheck="true">// 如果传入的参数是promise类型对象，结果取决于 promise对象的结果</span>    <span class="token keyword">static</span> <span class="token function">resolve</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token keyword">instanceof</span> <span class="token class-name">Promise</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                value<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>res <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                    <span class="token function">resolve</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>                <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span> err <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                    <span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>                <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token keyword">else</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token function">resolve</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// static xx === Promise.xxx</span>    <span class="token comment" spellcheck="true">// 添加reject方法</span>    <span class="token comment" spellcheck="true">// 始终返回一个失败的promise对象</span>    <span class="token keyword">static</span> <span class="token function">reject</span><span class="token punctuation">(</span>reason<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token function">reject</span><span class="token punctuation">(</span>reason<span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 添加 all方法</span>    <span class="token comment" spellcheck="true">// promises数组中全部状态为成功才成功 否则失败</span>    <span class="token keyword">static</span> <span class="token function">all</span><span class="token punctuation">(</span>promises<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">0</span>            <span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> promises<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                promises<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>res <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                    <span class="token comment" spellcheck="true">// 对象状态为成功</span>                    <span class="token comment" spellcheck="true">// 要求每个pormise状态成功才返回成功的promise</span>                    count<span class="token operator">++</span>                    <span class="token comment" spellcheck="true">// 保证每个promise位置和传过来的位置一样，哪怕异步后执行</span>                    arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> res                    <span class="token keyword">if</span> <span class="token punctuation">(</span>count <span class="token operator">===</span> promises<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                        <span class="token comment" spellcheck="true">// 成功状态</span>                        <span class="token function">resolve</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span>                    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>                <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span> err <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                    <span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>                <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 添加race方法</span>    <span class="token comment" spellcheck="true">// 它返回一个新的promise，结果是数组中先第一个返回promise的结果，就是新promise结果</span>    <span class="token keyword">static</span> <span class="token function">race</span><span class="token punctuation">(</span>promises<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> promises<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                promises<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>res <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                    <span class="token function">resolve</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>                <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span> err <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                    <span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>                <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><h2 id="async函数"><a href="#async函数" class="headerlink" title="async函数"></a>async函数</h2><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">// 返回一个promise对象</span><span class="token comment" spellcheck="true">// 如果是非promise返回成功的promise对象</span><span class="token comment" spellcheck="true">// 如果是promise根据它是状态来返回成功 | 失败的promise对象</span><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// throw 'oh no'</span>    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span>reject<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// resolve('ok')</span>        <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">'err'</span><span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h2 id="await表达式"><a href="#await表达式" class="headerlink" title="await表达式"></a>await表达式</h2><ul><li>await右侧可以是promise对象，也可以是其它值</li><li>如果是promise对象，await返回promise成功的值</li><li>如果是其它值，将此值作为await返回值<br><strong>await必须写在async中，但是async可以没有await</strong><pre class=" language-js"><code class="language-js"> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// throw 'oh no'</span>  <span class="token keyword">try</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span>reject<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">// resolve('ok')</span>      <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">'err'</span><span class="token punctuation">)</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">error</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      console<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre></li></ul><h1 id="Axios"><a href="#Axios" class="headerlink" title="Axios"></a>Axios</h1><h2 id="请求报文：-1"><a href="#请求报文：-1" class="headerlink" title="请求报文："></a>请求报文：</h2><p>:one:请求行:two:请求头信息:three:请求体</p><ul><li>请求行：:one:请求方式 :two:请求路径url :three:所用的协议<ul><li>请求方式：get | post | put | delete | trace…</li></ul></li><li>请求头： <ul><li>Host:<a href="http://www.baidu.com/">www.baidu.com</a></li><li>Cookie: BAIDUID&#x3D;XXXXXXXXXX;BAIDUSID&#x3D;XXXX;（sid：sessionID）</li><li>Content-Type: application&#x2F;x-www-from-urlencoded | applicaton&#x2F;json</li></ul></li><li>请求体： :one: username&#x3D;tom&amp;pwd&#x3D;123 :two: {“username:,”tom”,”pwd”:123} &#x3D;&gt;(application&#x2F;json的格式)</li></ul><h2 id="响应报文：-1"><a href="#响应报文：-1" class="headerlink" title="响应报文："></a>响应报文：</h2><ul><li>响应行：:one:协议版本 :two:状态码 :three:状态文本<ul><li>status: <ul><li>200:请求成功 </li><li>404: not found 无法找到请求资源</li><li>201：已创建</li><li>401：未授权</li><li>500：服务器内部错误</li></ul></li></ul></li><li>响应头信息：key : value<ul><li>Content-Type”: text&#x2F;html ;charset&#x3D;utf-8</li><li>Set-Cookie:BD_CK_SAM&#x3D;1;path&#x3D;&#x2F;</li></ul></li><li>响应体：html内容 | json文本 | js&#x2F;css |图片</li></ul><h2 id="不同类型的请求及作用"><a href="#不同类型的请求及作用" class="headerlink" title="不同类型的请求及作用"></a>不同类型的请求及作用</h2><ul><li>get: 从服务器读数据</li><li>post: 向服务器添加数据</li><li>put: 更新服务器数据</li><li>delete: 删除服务器数据</li></ul><h2 id="API分类"><a href="#API分类" class="headerlink" title="API分类"></a>API分类</h2><ul><li><p>restful:rest API</p><ul><li>发送请求进行CRUD由请求方式来决定</li><li>同一个请求路径可以进行多种操作</li><li>请求方式： GET | POST | PUT | DELETE</li></ul></li><li><p>restless: 非rest API</p><ul><li>请求方式不决定请求的CRUD请求</li><li>一个请求路径只对应一个操作</li><li>一般只有GET | POST</li></ul></li></ul><h3 id="json-server-restful"><a href="#json-server-restful" class="headerlink" title="json-server(restful)"></a>json-server(restful)</h3><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">// install</span>npm i ig json<span class="token operator">-</span>server<span class="token comment" spellcheck="true">// create a db.json with some data (项目根目录)</span><span class="token comment" spellcheck="true">// start</span>json<span class="token operator">-</span>server <span class="token operator">--</span>watch db<span class="token punctuation">.</span>json</code></pre><ul><li>query: &#x2F;posts?id&#x3D;1(过滤处理)</li><li>params: &#x2F;posts&#x2F;1 直接定位</li></ul><h2 id="区别一般http和ajax请求"><a href="#区别一般http和ajax请求" class="headerlink" title="区别一般http和ajax请求"></a>区别一般http和ajax请求</h2><ul><li>ajxa一种特别的http请求</li><li>服务器来说没区别，区别在浏览器端</li><li>ajax请求只有xhr和fetch，其它是非ajax请求</li><li>ajax引擎，一种内置代码，浏览器派发ajax引擎发ajax请求</li><li>一般请求：浏览器直接显示，刷新|跳转 </li><li>ajax请求：浏览器不会更新操作，需要我们来修改数据</li></ul><h2 id="API-1"><a href="#API-1" class="headerlink" title="API"></a>API</h2><ul><li>onerror : 网络错误的监听</li><li>open() :初始化请求</li><li>send(): 发请求</li><li>abort(): 中断请求</li><li>….</li></ul><p>配置对象：它的key值|属性名是固定的，不能随便改。<br>send的数据，urlencoded | json</p><h2 id="axios封装"><a href="#axios封装" class="headerlink" title="axios封装"></a>axios封装</h2><pre class=" language-js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">axios</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    url<span class="token punctuation">,</span>    method <span class="token operator">=</span> <span class="token string">'GET'</span><span class="token punctuation">,</span>    params <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>    data <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 返回一个promise数据</span>    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span>reject<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 把method统一下</span>        method <span class="token operator">=</span> method<span class="token punctuation">.</span><span class="token function">toLocaleUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">// 处理query参数，要带在url后面        </span>        <span class="token keyword">let</span> queryString <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>item <span class="token operator">=</span><span class="token operator">></span> item<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">'='</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">'&amp;'</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">// let queryString = ''</span>        <span class="token comment" spellcheck="true">// let kv = Object.entries(params).forEach(item => &amp;#123;</span>        <span class="token comment" spellcheck="true">//     queryString += `$&amp;#123;item[0]&amp;#125;=$&amp;#123;item[1]&amp;#125;&amp;`</span>        <span class="token comment" spellcheck="true">// &amp;#125;)</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>queryString<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// queryString = queryString.substring(0,queryString.length - 1)</span>            url <span class="token operator">+</span><span class="token operator">=</span> <span class="token string">'?'</span> <span class="token operator">+</span> queryString        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// 创建xhr实例对象</span>        <span class="token keyword">let</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">// 初始化,true为异步</span>        request<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>method<span class="token punctuation">,</span>url<span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">// 发请求</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>method <span class="token operator">===</span> <span class="token string">'GET'</span> <span class="token operator">||</span> method <span class="token operator">===</span> <span class="token string">'DELETE'</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            request<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>method <span class="token operator">===</span> <span class="token string">'POST'</span> <span class="token operator">||</span> method <span class="token operator">===</span> <span class="token string">'PUT'</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            request<span class="token punctuation">.</span><span class="token function">setRequestHeader</span><span class="token punctuation">(</span><span class="token string">'Content-Type'</span><span class="token punctuation">,</span><span class="token string">'application/json;chartset=utf-8'</span><span class="token punctuation">)</span>            <span class="token comment" spellcheck="true">// 发送json格式请求体参数： 必须加请求头</span>            request<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>JSON<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        request<span class="token punctuation">.</span>onreadystatechange <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 请求没有完成</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>readyState <span class="token operator">!==</span> <span class="token number">4</span> <span class="token punctuation">)</span> <span class="token keyword">return</span>            <span class="token keyword">const</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>status<span class="token punctuation">,</span>statusText<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token operator">=</span> request            <span class="token keyword">if</span><span class="token punctuation">(</span>status <span class="token operator">>=</span> <span class="token number">200</span> <span class="token operator">&amp;&amp;</span> status <span class="token operator">&lt;</span> <span class="token number">300</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// 请求成功，调用 resolve</span>                <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                    data<span class="token punctuation">:</span> JSON<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>response<span class="token punctuation">)</span><span class="token punctuation">,</span>                    status<span class="token punctuation">,</span>                    statusText                <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>                <span class="token function">resolve</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token keyword">else</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// 请求失败，调用 reject</span>                <span class="token function">reject</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">'request error,status is '</span> <span class="token operator">+</span> status<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>               <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><h2 id="axios介绍及特点"><a href="#axios介绍及特点" class="headerlink" title="axios介绍及特点"></a>axios介绍及特点</h2><h3 id="axios是什么"><a href="#axios是什么" class="headerlink" title="axios是什么"></a>axios是什么</h3><ul><li>前端最流行的ajax请求库</li><li>react | vue官方推荐用axios发ajax请求</li></ul><h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><ul><li>基于promise的异步ajax请求库</li><li>浏览器和node都可以用</li><li>支持请求拦截器|响应拦截器</li><li>支持请求取消</li><li>请求|响应数据转换</li><li>批量发送多个请求（封装的promise.all）</li></ul><p><strong>只有浏览器才有可能发ajax请求，服务器只有http请求</strong></p><h3 id="常用语法"><a href="#常用语法" class="headerlink" title="常用语法"></a>常用语法</h3><p><strong>语法糖：包装它的简单语法</strong></p><ul><li><p>axios(config): 通用&#x2F;最本质的发任意类型请求的方式</p></li><li><p>axios(url[, config]): 可以只指定url 发get 请求</p></li><li><p>axios.request(config): 等同于axios(config)</p></li><li><p>axios.get(url[, config]): 发get 请求</p></li><li><p>axios.delete(url[, config]): 发delete 请求</p></li><li><p>axios.post(url[, data, config]): 发post 请求</p></li><li><p>axios.put(url[, data, config]): 发put 请求</p></li><li><p>axios.defaults.xxx: 请求的默认全局配置（method\baseURL\params\timeout…）</p></li><li><p>axios.interceptors.request.use(): 添加请求拦截器</p></li><li><p>axios.interceptors.response.use(): 添加响应拦截器</p></li><li><p>axios.create([config]): 创建一个新的axios(它没有下面的功能)</p></li><li><p>axios.Cancel(): 用于创建取消请求的错误对象</p></li><li><p>axios.CancelToken(): 用于创建取消请求的 token 对象</p></li><li><p>axios.isCancel(): 是否是一个取消请求的错误</p></li><li><p>axios.all(promises): 用于批量执行多个异步请求</p></li><li><p>axios.spread(): 用来指定接收所有成功数据的回调函数的方法</p></li></ul><h2 id="axios-create-config"><a href="#axios-create-config" class="headerlink" title="axios.create(config)"></a>axios.create(config)</h2><pre class=" language-js"><code class="language-js"><span class="token keyword">const</span> instance <span class="token operator">=</span> axios<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    baseURL<span class="token punctuation">:</span> <span class="token string">'http://localhost:3000'</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// instance是一个函数</span><span class="token function">instance</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    url<span class="token punctuation">:</span><span class="token string">'xx'</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// instace是对象</span>instance<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">'/xx'</span><span class="token punctuation">)</span></code></pre><ul><li>1.根据指定配置创建一个新axios，也就是每个新axios都有自己的配置</li><li>2.新的axios只是<strong>没有取消请求和批量发请求</strong>的方法，其它语法都是一致的</li><li>3.设计这个语法原因？<ul><li>需求：项目中有部分接口需要配置与另一部分接口配置不一样（比如baseURL的不同），如何处理？</li><li>解决： 创建新axios，每个都有自己配置，应用到不同的接口请求中</li></ul></li></ul><h2 id="拦截器运行流程"><a href="#拦截器运行流程" class="headerlink" title="拦截器运行流程"></a>拦截器运行流程</h2><ul><li>请求拦截器：发请求前<ul><li>请求拦截器后添加，先执行(类似栈：后进先出)</li></ul></li><li>响应拦截器： 在我发请求回调之前执行<br><strong>相同的处理放在响应拦截器前，不同的处理单独写</strong></li></ul><h2 id="取消请求"><a href="#取消请求" class="headerlink" title="取消请求"></a>取消请求</h2><ul><li>取消正在发送的当前请求<ul><li><p>Cancel对象只有message，无status</p></li><li><p>Error对象才status和message<br>&#96;&#96;&#96;js<br>let cancel &#x2F;&#x2F; 用于保存取消请求的函数<br>  function getProducts1() {<br>  axios({<br>      url: ‘<a href="http://localhost:4000/products1&#39;">http://localhost:4000/products1&#39;</a>,<br>      cancelToken: new axios.CancelToken(function executor(c) { &#x2F;&#x2F; c是用于取消当前请求的函数<br>          &#x2F;&#x2F; 保存取消函数，用于之后可能需要取消当前请求<br>          cancel &#x3D; c;<br>      })<br>  }).then(<br>      response &#x3D;&gt; {<br>          cancel &#x3D; null<br>          console.log(‘请求1成功了’, response.data)<br>      },<br>      error &#x3D;&gt; {<br>          cancel &#x3D; null<br>          console.log(‘请求1失败了’, error.message, error) &#x2F;&#x2F; 请求1失败了 强制取消请求 Cancel {message: “强制取消请求”}<br>      }<br>  )<br>  }</p><p>  function getProducts2() {<br>  axios({<br>      url: ‘<a href="http://localhost:4000/products2&#39;">http://localhost:4000/products2&#39;</a><br>  }).then(<br>      response &#x3D;&gt; {<br>          console.log(‘请求2成功了’, response.data)<br>      }<br>  )<br>  }</p><p>  function cancelReq() {<br>  &#x2F;&#x2F; alert(‘取消请求’)<br>  &#x2F;&#x2F; 执行取消请求的函数<br>  if (typeof cancel &#x3D;&#x3D;&#x3D; ‘function’) {<br>      cancel(‘强制取消请求’)<br>  } else {<br>      console.log(‘没有可取消的请求’)<br>  }<br>  }</p></li></ul></li></ul><pre><code>* 当进行重复发请求时，应该先取消前一个请求，再继续发请求，就是发请求前判断cancel是不是null，不是null话，就要取消请求,取消请求就会进行error回调，判断error是不是axios.Cancel对象，如果是Cancel对象就不能设cancel = null 因为上一次请求异步执行会把下一次请求cancel它是同步执行，会把下一次的cancel设置为null，就不能取消后面请求了， 如果是请求本身失败就把cancel设置为null。* 此部分代码冗余，我们把公共写在请求拦截器里面  ## axios源码分析 ### axios与Axios的关系？ * 1.从语法上来说：axios不是Axios的实例 （axios是函数） * 2.从功能上来说： axios是Axios的实例（可以axios.get()等来使用Axios原型上的方法，但是它也保持函数特性，可以直接函数方式来调用） * 3.axios是Axios.prototype.request函数bind()返回的函数（bind()返回一个request.call(xx)函数,本质axios是调用request方法，只是this发生改变，让axios可以有Axios属性时，像函数一样使用） * 4.axios作为对象有Axios原型对象上的所有方法，有Axios对象上的所有属性 ### instance与axios的区别？instace = axios.create(),axios从语法上不是Axios的实例，从功能上是它的实例，它可以像函数一样使用，但是也有Axios原型的属性方法，并不是通过new xx来的，* 相同：    * 都是一个能发任意请求的函数，request(config)    * 都有发特定请求的各种方法：get() | put() | post()    * 都有默认配置和拦截器的属性：defaults | interceptors* 不同：    * 默认匹配的值可能不一样    * instance没有axios后续添加的方法：create() | CancelToken() | all()### axios支行流程图要发axios请求必须用: axios | instance(axios.create())&lt;img src=&quot;./media/axios支行流程图1.png&quot;&gt;&lt;img src=&quot;./media/axios支行流程图2.png&quot;&gt;&lt;img src=&quot;./media/axios支行流程图3.png&quot;&gt;* 整体流程request(config) =&gt; dispatchRequest(config) =&gt; xhrAdapter(config)&lt;img src=&quot;./media/流程代码思想.png&quot;&gt;请求拦截器unshift,响应拦截器push =&gt;**请求拦截器后添加，先执行*** request流程图example: requestInterceptors1:(fulfilled1,rejected1)responseInterceptors2:(fulfilled2,rejected2)requestInterceptors11:(fulfilled11,rejected11)responseInterceptors22:(fulfilled22,rejected22)promise链回调： config// 请求拦截器 =&gt; (fulfilled11,rejected11) =&gt; (fulfilled1,rejected1)// 发请求 =&gt; (dispatchRequest,undefined) // 响应拦截器 =&gt; (fulfilled11,rejected11) =&gt; (fulfilled22,rejected22)// axios发请求的回调处理 =&gt; (onResolved, onRejected)&lt;img src=&quot;./media/拦截器.png&quot;&gt;* request(config)将请求拦截器|dispatchRequest() | 响应拦截器，通过promise串连起来，返回promise* dispatchRequest(config)转换请求数据 =&gt; 调用xhrAdapter发请求 =&gt; 请求返回，转换响应数据,返回promise* xhrAdapter(config)创建xhr，根据config进行设置，发送特定请求，并接收响应数据，返回promise，（成功带response,失败带error）### 如何取消未完成的请求* 当配置了cancelToken对象时，保存cancel函数    * 创建用于将来中断请求的cancelPromise    * 并定义一个用于取消请求的cancel函数    * 将cancel函数传递出来* 调用cancel取消请求    * 执行cancel函数，传入错误信息message    * 内部让cancelPromise变为成功，成功值为Cancel对象    * cancelPromise的成功回调中断请求，并让请求的promise失败，失败的reason为Cacel对象(取消请求时，取消函数返回成功的promise，值是取消的对象，相对于请求的回调返回应该是失败的promise，值是取消的对象)</code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>hexo+github来搭建个人博客</title>
      <link href="/2022/05/14/using-hexo-and-git-to-build-a-personal-blog/"/>
      <url>/2022/05/14/using-hexo-and-git-to-build-a-personal-blog/</url>
      
        <content type="html"><![CDATA[<h1 id="安装Nodejs"><a href="#安装Nodejs" class="headerlink" title="安装Nodejs"></a>安装Nodejs</h1><ul><li>查看node版本:node -v</li><li>查看npm版本: npm -v<h1 id="安装淘宝的cnpm-管理器"><a href="#安装淘宝的cnpm-管理器" class="headerlink" title="安装淘宝的cnpm 管理器"></a>安装淘宝的cnpm 管理器</h1><pre class=" language-js"><code class="language-js">npm install <span class="token operator">-</span>g cnpm <span class="token operator">--</span>registry<span class="token operator">=</span>http<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>registry<span class="token punctuation">.</span>npm<span class="token punctuation">.</span>taobao<span class="token punctuation">.</span>org</code></pre></li><li>查看cnpm版本:cnpm -v<h1 id="安装hexo框架"><a href="#安装hexo框架" class="headerlink" title="安装hexo框架"></a>安装hexo框架</h1><pre class=" language-js"><code class="language-js">cnpm install <span class="token operator">-</span>g hexo<span class="token operator">-</span>cli</code></pre></li><li>查看hexo版本:hexo -v</li></ul><h1 id="创建blog目录"><a href="#创建blog目录" class="headerlink" title="创建blog目录"></a>创建blog目录</h1><p>mkdir blog</p><ul><li>进入blog目录:cd blog<h1 id="生成博客-初始化博客"><a href="#生成博客-初始化博客" class="headerlink" title="生成博客 初始化博客"></a>生成博客 初始化博客</h1><code>sudo hexo init </code></li><li>windows是不需要sudo<h1 id="启动本地博客服务"><a href="#启动本地博客服务" class="headerlink" title="启动本地博客服务"></a>启动本地博客服务</h1><code>hexo s</code><h1 id="本地访问地址"><a href="#本地访问地址" class="headerlink" title="本地访问地址"></a>本地访问地址</h1><code>http://localhost:4000/</code><h1 id="创建新的文章"><a href="#创建新的文章" class="headerlink" title="创建新的文章"></a>创建新的文章</h1><code>hexo n &quot;我的第一篇文章&quot;</code><h1 id="返回blog目录"><a href="#返回blog目录" class="headerlink" title="返回blog目录"></a>返回blog目录</h1><code>cd ..</code><h1 id="清理"><a href="#清理" class="headerlink" title="清理"></a>清理</h1><code>hexo c</code><h1 id="生成"><a href="#生成" class="headerlink" title="生成"></a>生成</h1><code>hexo g </code><h1 id="Github创建一个新的仓库"><a href="#Github创建一个新的仓库" class="headerlink" title="Github创建一个新的仓库"></a>Github创建一个新的仓库</h1><pre><code>// 仓库名一定要是你的github的名字，YourGithubName.github.io</code></pre><h1 id="在blog目录下安装git部署插件"><a href="#在blog目录下安装git部署插件" class="headerlink" title="在blog目录下安装git部署插件"></a>在blog目录下安装git部署插件</h1> <code>cnpm install --save hexo-deployer-git</code></li></ul><hr><h1 id="配置-config-yml"><a href="#配置-config-yml" class="headerlink" title="配置_config.yml"></a>配置_config.yml</h1><ul><li>Deployment<h2 id="Docs-https-hexo-io-docs-deployment-html"><a href="#Docs-https-hexo-io-docs-deployment-html" class="headerlink" title="Docs: https://hexo.io/docs/deployment.html"></a>Docs: <a href="https://hexo.io/docs/deployment.html">https://hexo.io/docs/deployment.html</a></h2><ul><li>deploy:<br>type: git<br>   repo: <a href="https://github.com/study-for-me/study-for-me.github.io.git">https://github.com/study-for-me/study-for-me.github.io.git</a><br>branch: master</li></ul></li></ul><hr><h1 id="部署到Github仓库里"><a href="#部署到Github仓库里" class="headerlink" title="部署到Github仓库里"></a>部署到Github仓库里</h1><p><code>hexo d</code></p><h1 id="访问这个地址可以查看博客"><a href="#访问这个地址可以查看博客" class="headerlink" title="访问这个地址可以查看博客"></a>访问这个地址可以查看博客</h1><p><a href="https://github.com/study-for-me/study-for-me.github.io.git">https://github.com/study-for-me/study-for-me.github.io.git</a> </p><h1 id="下载yilia主题到本地"><a href="#下载yilia主题到本地" class="headerlink" title="下载yilia主题到本地"></a>下载yilia主题到本地</h1><pre class=" language-js"><code class="language-js">git clone https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>github<span class="token punctuation">.</span>com<span class="token operator">/</span>litten<span class="token operator">/</span>hexo<span class="token operator">-</span>theme<span class="token operator">-</span>yilia<span class="token punctuation">.</span>git themes<span class="token operator">/</span>yilia</code></pre><h1 id="修改hexo根目录下的-config-yml-文件-："><a href="#修改hexo根目录下的-config-yml-文件-：" class="headerlink" title="修改hexo根目录下的 _config.yml 文件 ："></a>修改hexo根目录下的 _config.yml 文件 ：</h1><p><code> theme: yilia</code></p><h1 id="清理一下"><a href="#清理一下" class="headerlink" title="清理一下"></a>清理一下</h1><p><code>hexo c</code></p><h1 id="生成-1"><a href="#生成-1" class="headerlink" title="生成"></a>生成</h1><p><code>hexo g</code></p><h1 id="部署到远程Github仓库"><a href="#部署到远程Github仓库" class="headerlink" title="部署到远程Github仓库"></a>部署到远程Github仓库</h1><p><code>hexo d</code></p><h1 id="查看博客"><a href="#查看博客" class="headerlink" title="查看博客"></a>查看博客</h1><p><code>https://github.com/study-for-me/study-for-me.github.io.git</code></p><h1 id="如是在-hexo-d-出错"><a href="#如是在-hexo-d-出错" class="headerlink" title="如是在 hexo d 出错"></a>如是在 hexo d 出错</h1><p>fatal: unable to access ‘<a href="https://github.com/.../.git&#39;">https://github.com/.../.git&#39;</a>: Could not resolve host: github.com</p><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">//命令行执行</span>git config <span class="token operator">--</span>global <span class="token operator">--</span>unset http<span class="token punctuation">.</span>proxy git config <span class="token operator">--</span>global <span class="token operator">--</span>unset https<span class="token punctuation">.</span>proxy</code></pre><h1 id="我又设置了主题"><a href="#我又设置了主题" class="headerlink" title="我又设置了主题"></a>我又设置了主题</h1><p><a href="https://blinkfox.github.io/2018/09/28/qian-duan/hexo-bo-ke-zhu-ti-zhi-hexo-theme-matery-de-jie-shao/#toc-heading-2">https://blinkfox.github.io/2018/09/28/qian-duan/hexo-bo-ke-zhu-ti-zhi-hexo-theme-matery-de-jie-shao/#toc-heading-2</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/05/14/hello-world/"/>
      <url>/2022/05/14/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
